#include <math.h>
#include <stdio.h>
#include "dvbs2_rx.h"

extern RxFormat g_format;

#define CP 1.0

FComplex g_bpsk[2][2];
FComplex g_qpsk[4];
FComplex g_8psk[8];
FComplex g_16apsk[16];
FComplex g_32apsk[32];
FComplex g_64apsk[64];
FComplex g_128apsk[128];
FComplex g_256apsk[256];

void contab_open(void){
    float r1 = 1.0;

    // BPSK
    g_bpsk[0][0].re = ((r1*cos(M_PI/4.0))*CP);
    g_bpsk[0][0].im = ((r1*sin(M_PI/4.0))*CP);
    g_bpsk[0][1].re = ((r1*cos(5.0*M_PI/4.0))*CP);
    g_bpsk[0][1].im = ((r1*sin(5.0*M_PI/4.0))*CP);
    g_bpsk[1][0].re = ((r1*cos(5.0*M_PI/4.0))*CP);
    g_bpsk[1][0].im = ((r1*sin(M_PI/4.0))*CP);
    g_bpsk[1][1].re = ((r1*cos(M_PI/4.0))*CP);
    g_bpsk[1][1].im = ((r1*sin(5.0*M_PI/4.0))*CP);

    // QPSK
    g_qpsk[0].re = ((r1*cos(M_PI/4.0))*CP);
    g_qpsk[0].im = ((r1*sin(M_PI/4.0))*CP);
    g_qpsk[1].re = ((r1*cos(7*M_PI/4.0))*CP);
    g_qpsk[1].im = ((r1*sin(7*M_PI/4.0))*CP);
    g_qpsk[2].re = ((r1*cos(3*M_PI/4.0))*CP);
    g_qpsk[2].im = ((r1*sin(3*M_PI/4.0))*CP);
    g_qpsk[3].re = ((r1*cos(5*M_PI/4.0))*CP);
    g_qpsk[3].im = ((r1*sin(5*M_PI/4.0))*CP);

    // 8PSK
/*
    g_8psk[0].re = ((r1*cos(M_PI/4.0))*CP);
    g_8psk[0].im = ((r1*sin(M_PI/4.0))*CP);
    g_8psk[1].re = ((r1*cos(0.0))*CP);
    g_8psk[1].im = ((r1*sin(0.0))*CP);
    g_8psk[2].re = ((r1*cos(4*M_PI/4.0))*CP);
    g_8psk[2].im = ((r1*sin(4*M_PI/4.0))*CP);
    g_8psk[3].re = ((r1*cos(5*M_PI/4.0))*CP);
    g_8psk[3].im = ((r1*sin(5*M_PI/4.0))*CP);
    g_8psk[4].re = ((r1*cos(2*M_PI/4.0))*CP);
    g_8psk[4].im = ((r1*sin(2*M_PI/4.0))*CP);
    g_8psk[5].re = ((r1*cos(7*M_PI/4.0))*CP);
    g_8psk[5].im = ((r1*sin(7*M_PI/4.0))*CP);
    g_8psk[6].re = ((r1*cos(3*M_PI/4.0))*CP);
    g_8psk[6].im = ((r1*sin(3*M_PI/4.0))*CP);
    g_8psk[7].re = ((r1*cos(6*M_PI/4.0))*CP);
    g_8psk[7].im = ((r1*sin(6*M_PI/4.0))*CP);
*/
}

void contab_close(void){

}

void contab_set(void){

	float r1, r2, r3, r4, r5, r6, r7, r8;
	float m = 1.0;
    r1 = m;
   switch (g_format.mod) {
     case m_BPSK:
     case m_SET_1:
       g_bpsk[0][0] = (FComplex){(r1 * cos(M_PI / 4.0)), (r1 * sin(M_PI / 4.0))};
       g_bpsk[0][1] = (FComplex){(r1 * cos(5.0 * M_PI / 4.0)), (r1 * sin(5.0 * M_PI / 4.0))};
       g_bpsk[1][0] = (FComplex){(r1 * cos(5.0 * M_PI / 4.0)), (r1 * sin(M_PI / 4.0))};
       g_bpsk[1][1] = (FComplex){(r1 * cos(M_PI / 4.0)), (r1 * sin(5.0 * M_PI /4.0))};
       break;
     case m_QPSK:
       g_qpsk[0] = (FComplex){(r1 * cos(M_PI / 4.0)), (r1 * sin(M_PI / 4.0))};
       g_qpsk[1] = (FComplex){(r1 * cos(7 * M_PI / 4.0)), (r1 * sin(7 * M_PI / 4.0))};
       g_qpsk[2] = (FComplex){(r1 * cos(3 * M_PI / 4.0)), (r1 * sin(3 * M_PI / 4.0))};
       g_qpsk[3] = (FComplex){(r1 * cos(5 * M_PI / 4.0)), (r1 * sin(5 * M_PI / 4.0))};
       demap_update_constellation(g_qpsk, 4);
       break;
     case m_8PSK:
       g_8psk[0] = (FComplex){(r1 * cos(M_PI / 4.0)), (r1 * sin(M_PI / 4.0))};
       g_8psk[1] = (FComplex){(r1 * cos(0.0)), (r1 * sin(0.0))};
       g_8psk[2] = (FComplex){(r1 * cos(4 * M_PI / 4.0)), (r1 * sin(4 * M_PI / 4.0))};
       g_8psk[3] = (FComplex){(r1 * cos(5 * M_PI / 4.0)), (r1 * sin(5 * M_PI / 4.0))};
       g_8psk[4] = (FComplex){(r1 * cos(2 * M_PI / 4.0)), (r1 * sin(2 * M_PI / 4.0))};
       g_8psk[5] = (FComplex){(r1 * cos(7 * M_PI / 4.0)), (r1 * sin(7 * M_PI / 4.0))};
       g_8psk[6] = (FComplex){(r1 * cos(3 * M_PI / 4.0)), (r1 * sin(3 * M_PI / 4.0))};
       g_8psk[7] = (FComplex){(r1 * cos(6 * M_PI / 4.0)), (r1 * sin(6 * M_PI / 4.0))};
       demap_update_constellation(g_8psk, 8);
       break;
     case m_8APSK:
       r3 = m;
       switch(g_format.code_rate) {
         case cR_100_180:
           r1 = r3 / 6.8;
           r2 = r1 * 5.32;
           break;
         case cR_104_180:
           r1 = r3 / 8.0;
           r2 = r1 * 6.39;
           break;
         default:
           r1 = 0;
           r2 = 0;
           break;
       }
       g_8psk[0] = (FComplex){(r1 * cos(M_PI)), (r1 * sin(M_PI))};
       g_8psk[1] = (FComplex){(r2 * cos(M_PI * 1.352)), (r2 * sin(M_PI * 1.352))};
       g_8psk[2] = (FComplex){(r2 * cos(M_PI * -1.352)), (r2 * sin(M_PI * -1.352))};
       g_8psk[3] = (FComplex){(r3 * cos(M_PI)), (r3 * sin(M_PI))};
       g_8psk[4] = (FComplex){(r1 * cos(0.0)), (r1 * sin(0.0))};
       g_8psk[5] = (FComplex){(r2 * cos(M_PI * -0.352)), (r2 * sin(M_PI * -0.352))};
       g_8psk[6] = (FComplex){(r2 * cos(M_PI * 0.352)), (r2 * sin(M_PI * 0.352))};
       g_8psk[7] = (FComplex){(r3 * cos(0.0)), (r3 * sin(0.0))};
       demap_update_constellation(g_8psk, 8);
       break;
     case m_16APSK:
       r2 = m;
       if (g_format.frame_type == frame_NORMAL) {
         switch(g_format.code_rate) {
           case cR_2_3:
             r1 = r2 / 3.15;
             break;
           case cR_3_4:
             r1 = r2 / 2.85;
             break;
           case cR_4_5:
             r1 = r2 / 2.75;
             break;
           case cR_5_6:
             r1 = r2 / 2.70;
             break;
           case cR_8_9:
             r1 = r2 / 2.60;
             break;
           case cR_9_10:
             r1 = r2 / 2.57;
             break;
           case cR_26_45:
           case cR_3_5:
             r1 = r2 / 3.70;
             break;
           case cR_28_45:
             r1 = r2 / 3.50;
             break;
           case cR_23_36:
           case cR_25_36:
             r1 = r2 / 3.10;
             break;
           case cR_13_18:
             r1 = r2 / 2.85;
             break;
           case cR_140_180:
             r1 = r2 / 3.60;
             break;
           case cR_154_180:
             r1 = r2 / 3.20;
             break;
           default:
             r1 = 0;
             break;
         }
       }
       else {
         switch(g_format.code_rate) {
           case cR_2_3:
             r1 = r2 / 3.15;
             break;
           case cR_3_4:
             r1 = r2 / 2.85;
             break;
           case cR_4_5:
             r1 = r2 / 2.75;
             break;
           case cR_5_6:
             r1 = r2 / 2.70;
             break;
           case cR_8_9:
             r1 = r2 / 2.60;
             break;
           case cR_7_15:
             r1 = r2 / 3.32;
             break;
           case cR_8_15:
             r1 = r2 / 3.50;
             break;
           case cR_26_45:
           case cR_3_5:
             r1 = r2 / 3.70;
             break;
           case cR_32_45:
             r1 = r2 / 2.85;
             break;
           default:
             r1 = 0;
             break;
         }
       }
       g_16apsk[0] = (FComplex){(r2 * cos(M_PI / 4.0)), (r2 * sin(M_PI / 4.0))};
       g_16apsk[1] = (FComplex){(r2 * cos(-M_PI / 4.0)), (r2 * sin(-M_PI / 4.0))};
       g_16apsk[2] = (FComplex){(r2 * cos(3 * M_PI / 4.0)), (r2 * sin(3 * M_PI / 4.0))};
       g_16apsk[3] = (FComplex){(r2 * cos(-3 * M_PI / 4.0)), (r2 * sin(-3 * M_PI / 4.0))};
       g_16apsk[4] = (FComplex){(r2 * cos(M_PI / 12.0)), (r2 * sin(M_PI / 12.0))};
       g_16apsk[5] = (FComplex){(r2 * cos(-M_PI / 12.0)), (r2 * sin(-M_PI / 12.0))};
       g_16apsk[6] = (FComplex){(r2 * cos(11 * M_PI / 12.0)), (r2 * sin(11 * M_PI / 12.0))};
       g_16apsk[7] = (FComplex){(r2 * cos(-11 * M_PI / 12.0)), (r2 * sin(-11 * M_PI / 12.0))};
       g_16apsk[8] = (FComplex){(r2 * cos(5 * M_PI / 12.0)), (r2 * sin(5 * M_PI / 12.0))};
       g_16apsk[9] = (FComplex){(r2 * cos(-5 * M_PI / 12.0)), (r2 * sin(-5 * M_PI / 12.0))};
       g_16apsk[10] = (FComplex){(r2 * cos(7 * M_PI / 12.0)), (r2 * sin(7 * M_PI / 12.0))};
       g_16apsk[11] = (FComplex){(r2 * cos(-7 * M_PI / 12.0)), (r2 * sin(-7 * M_PI / 12.0))};
       g_16apsk[12] = (FComplex){(r1 * cos(M_PI / 4.0)), (r1 * sin(M_PI / 4.0))};
       g_16apsk[13] = (FComplex){(r1 * cos(-M_PI / 4.0)), (r1 * sin(-M_PI / 4.0))};
       g_16apsk[14] = (FComplex){(r1 * cos(3 * M_PI / 4.0)), (r1 * sin(3 * M_PI / 4.0))};
       g_16apsk[15] = (FComplex){(r1 * cos(-3 * M_PI / 4.0)), (r1 * sin(-3 * M_PI / 4.0))};
       demap_update_constellation(g_16apsk, 16);
       break;
     case m_8_8APSK:
       if (g_format.code_rate == cR_18_30) {
         g_16apsk[0] = (FComplex){0.4718, 0.2606};
         g_16apsk[1] = (FComplex){0.2606, 0.4718};
         g_16apsk[2] = (FComplex){-0.4718, 0.2606};
         g_16apsk[3] = (FComplex){-0.2606, 0.4718};
         g_16apsk[4] = (FComplex){0.4718, -0.2606};
         g_16apsk[5] = (FComplex){0.2606, -0.4718};
         g_16apsk[6] = (FComplex){-0.4718, -0.2606};
         g_16apsk[7] = (FComplex){-0.2606, -0.4718};
         g_16apsk[8] = (FComplex){1.2088, 0.4984};
         g_16apsk[9] = (FComplex){0.4984, 1.2088};
         g_16apsk[10] = (FComplex){-1.2088, 0.4984};
         g_16apsk[11] = (FComplex){-0.4984, 1.2088};
         g_16apsk[12] = (FComplex){1.2088, -0.4984};
         g_16apsk[13] = (FComplex){0.4984, -1.2088};
         g_16apsk[14] = (FComplex){-1.2088, -0.4984};
         g_16apsk[15] = (FComplex){-0.4984, -1.2088};
         demap_update_constellation(g_16apsk, 16);
       }
       else if (g_format.code_rate == cR_20_30) {
         g_16apsk[0] = (FComplex){0.5061, 0.2474};
         g_16apsk[1] = (FComplex){0.2474, 0.5061};
         g_16apsk[2] = (FComplex){-0.5061, 0.2474};
         g_16apsk[3] = (FComplex){-0.2474, 0.5061};
         g_16apsk[4] = (FComplex){0.5061, -0.2474};
         g_16apsk[5] = (FComplex){0.2474, -0.5061};
         g_16apsk[6] = (FComplex){-0.5061, -0.2474};
         g_16apsk[7] = (FComplex){-0.2474, -0.5061};
         g_16apsk[8] = (FComplex){1.2007, 0.4909};
         g_16apsk[9] = (FComplex){0.4909, 1.2007};
         g_16apsk[10] = (FComplex){-1.2007, 0.4909};
         g_16apsk[11] = (FComplex){-0.4909, 1.2007};
         g_16apsk[12] = (FComplex){1.2007, -0.4909};
         g_16apsk[13] = (FComplex){0.4909, -1.2007};
         g_16apsk[14] = (FComplex){-1.2007, -0.4909};
         g_16apsk[15] = (FComplex){-0.4909, -1.2007};
         demap_update_constellation(g_16apsk, 16);
       }
       else {
         r2 = m;
         switch(g_format.code_rate) {
           case cR_90_180:
           case cR_96_180:
           case cR_100_180:
             r1 = r2 / 2.19;
             break;
           default:
             r1 = 0;
             break;
         }
         g_16apsk[0] = (FComplex){(r1 * cos(M_PI / 8.0)), (r1 * sin(M_PI / 8.0))};
         g_16apsk[1] = (FComplex){(r1 * cos(3 * M_PI / 8.0)), (r1 * sin(3 * M_PI / 8.0))};
         g_16apsk[2] = (FComplex){(r1 * cos(7 * M_PI / 8.0)), (r1 * sin(7 * M_PI / 8.0))};
         g_16apsk[3] = (FComplex){(r1 * cos(5 * M_PI / 8.0)), (r1 * sin(5 * M_PI / 8.0))};
         g_16apsk[4] = (FComplex){(r1 * cos(15 * M_PI / 8.0)), (r1 * sin(15 * M_PI / 8.0))};
         g_16apsk[5] = (FComplex){(r1 * cos(13 * M_PI / 8.0)), (r1 * sin(13 * M_PI / 8.0))};
         g_16apsk[6] = (FComplex){(r1 * cos(9 * M_PI / 8.0)), (r1 * sin(9 * M_PI / 8.0))};
         g_16apsk[7] = (FComplex){(r1 * cos(11 * M_PI / 8.0)), (r1 * sin(11 * M_PI / 8.0))};
         g_16apsk[8] = (FComplex){(r2 * cos(M_PI / 8.0)), (r2 * sin(M_PI / 8.0))};
         g_16apsk[9] = (FComplex){(r2 * cos(3 * M_PI / 8.0)), (r2 * sin(3 * M_PI / 8.0))};
         g_16apsk[10] = (FComplex){(r2 * cos(7 * M_PI / 8.0)), (r2 * sin(7 * M_PI / 8.0))};
         g_16apsk[11] = (FComplex){(r2 * cos(5 * M_PI / 8.0)), (r2 * sin(5 * M_PI / 8.0))};
         g_16apsk[12] = (FComplex){(r2 * cos(15 * M_PI / 8.0)), (r2 * sin(15 * M_PI / 8.0))};
         g_16apsk[13] = (FComplex){(r2 * cos(13 * M_PI / 8.0)), (r2 * sin(13 * M_PI / 8.0))};
         g_16apsk[14] = (FComplex){(r2 * cos(9 * M_PI / 8.0)), (r2 * sin(9 * M_PI / 8.0))};
         g_16apsk[15] = (FComplex){(r2 * cos(11 * M_PI / 8.0)), (r2 * sin(11 * M_PI / 8.0))};
         demap_update_constellation(g_16apsk, 16);
       }
       break;
     case m_32APSK:
       r3 = m;
       switch(g_format.code_rate) {
         case cR_3_4:
           r1 = r3 / 5.27;
           r2 = r1 * 2.84;
           break;
         case cR_4_5:
           r1 = r3 / 4.87;
           r2 = r1 * 2.72;
           break;
         case cR_5_6:
           r1 = r3 / 4.64;
           r2 = r1 * 2.64;
           break;
         case cR_8_9:
           r1 = r3 / 4.33;
           r2 = r1 * 2.54;
           break;
         case cR_9_10:
           r1 = r3 / 4.30;
           r2 = r1 * 2.53;
           break;
         default:
           r1 = 0;
           r2 = 0;
           break;
       }
       g_32apsk[0] = (FComplex){(r2 * cos(M_PI / 4.0)), (r2 * sin(M_PI / 4.0))};
       g_32apsk[1] = (FComplex){(r2 * cos(5 * M_PI / 12.0)), (r2 * sin(5 * M_PI / 12.0))};
       g_32apsk[2] = (FComplex){(r2 * cos(-M_PI / 4.0)), (r2 * sin(-M_PI / 4.0))};
       g_32apsk[3] = (FComplex){(r2 * cos(-5 * M_PI / 12.0)), (r2 * sin(-5 * M_PI / 12.0))};
       g_32apsk[4] = (FComplex){(r2 * cos(3 * M_PI / 4.0)), (r2 * sin(3 * M_PI / 4.0))};
       g_32apsk[5] = (FComplex){(r2 * cos(7 * M_PI / 12.0)), (r2 * sin(7 * M_PI / 12.0))};
       g_32apsk[6] = (FComplex){(r2 * cos(-3 * M_PI / 4.0)), (r2 * sin(-3 * M_PI / 4.0))};
       g_32apsk[7] = (FComplex){(r2 * cos(-7 * M_PI / 12.0)), (r2 * sin(-7 * M_PI / 12.0))};
       g_32apsk[8] = (FComplex){(r3 * cos(M_PI / 8.0)), (r3 * sin(M_PI / 8.0))};
       g_32apsk[9] = (FComplex){(r3 * cos(3 * M_PI / 8.0)), (r3 * sin(3 * M_PI / 8.0))};
       g_32apsk[10] = (FComplex){(r3 * cos(-M_PI / 4.0)), (r3 * sin(-M_PI / 4.0))};
       g_32apsk[11] = (FComplex){(r3 * cos(-M_PI / 2.0)), (r3 * sin(-M_PI / 2.0))};
       g_32apsk[12] = (FComplex){(r3 * cos(3 * M_PI / 4.0)), (r3 * sin(3 * M_PI / 4.0))};
       g_32apsk[13] = (FComplex){(r3 * cos(M_PI / 2.0)), (r3 * sin(M_PI / 2.0))};
       g_32apsk[14] = (FComplex){(r3 * cos(-7 * M_PI / 8.0)), (r3 * sin(-7 * M_PI / 8.0))};
       g_32apsk[15] = (FComplex){(r3 * cos(-5 * M_PI / 8.0)), (r3 * sin(-5 * M_PI / 8.0))};
       g_32apsk[16] = (FComplex){(r2 * cos(M_PI / 12.0)), (r2 * sin(M_PI / 12.0))};
       g_32apsk[17] = (FComplex){(r1 * cos(M_PI / 4.0)), (r1 * sin(M_PI / 4.0))};
       g_32apsk[18] = (FComplex){(r2 * cos(-M_PI / 12.0)), (r2 * sin(-M_PI / 12.0))};
       g_32apsk[19] = (FComplex){(r1 * cos(-M_PI / 4.0)), (r1 * sin(-M_PI / 4.0))};
       g_32apsk[20] = (FComplex){(r2 * cos(11 * M_PI / 12.0)), (r2 * sin(11 * M_PI / 12.0))};
       g_32apsk[21] = (FComplex){(r1 * cos(3 * M_PI / 4.0)), (r1 * sin(3 * M_PI / 4.0))};
       g_32apsk[22] = (FComplex){(r2 * cos(-11 * M_PI / 12.0)), (r2 * sin(-11 * M_PI / 12.0))};
       g_32apsk[23] = (FComplex){(r1 * cos(-3 * M_PI / 4.0)), (r1 * sin(-3 * M_PI / 4.0))};
       g_32apsk[24] = (FComplex){(r3 * cos(0.0)), (r3 * sin(0.0))};
       g_32apsk[25] = (FComplex){(r3 * cos(M_PI / 4.0)), (r3 * sin(M_PI / 4.0))};
       g_32apsk[26] = (FComplex){(r3 * cos(-M_PI / 8.0)), (r3 * sin(-M_PI / 8.0))};
       g_32apsk[27] = (FComplex){(r3 * cos(-3 * M_PI / 8.0)), (r3 * sin(-3 * M_PI / 8.0))};
       g_32apsk[28] = (FComplex){(r3 * cos(7 * M_PI / 8.0)), (r3 * sin(7 * M_PI / 8.0))};
       g_32apsk[29] = (FComplex){(r3 * cos(5 * M_PI / 8.0)), (r3 * sin(5 * M_PI / 8.0))};
       g_32apsk[30] = (FComplex){(r3 * cos(M_PI)), (r3 * sin(M_PI))};
       g_32apsk[31] = (FComplex){(r3 * cos(-3 * M_PI / 4.0)), (r3 * sin(-3 * M_PI / 4.0))};
       demap_update_constellation(g_32apsk, 32);
       break;
     case m_4_12_16rbAPSK:
       r3 = m;
       if (g_format.frame_type == frame_NORMAL) {
         switch(g_format.code_rate) {
           case cR_2_3:
             r1 = r3 / 5.55;
             r2 = r1 * 2.85;
             break;
           default:
             r1 = 0;
             r2 = 0;
             break;
         }
       }
       else {
         switch(g_format.code_rate) {
           case cR_2_3:
             r1 = r3 / 5.54;
             r2 = r1 * 2.84;
             break;
           case cR_32_45:
             r1 = r3 / 5.26;
             r2 = r1 * 2.84;
             break;
           default:
             r1 = 0;
             r2 = 0;
             break;
         }
       }
       g_32apsk[0] = (FComplex){(r3 * cos(11 * M_PI / 16.0)), (r3 * sin(11 * M_PI / 16.0))};
       g_32apsk[1] = (FComplex){(r3 * cos(9 * M_PI / 16.0)), (r3 * sin(9 * M_PI / 16.0))};
       g_32apsk[2] = (FComplex){(r3 * cos(5 * M_PI / 16.0)), (r3 * sin(5 * M_PI / 16.0))};
       g_32apsk[3] = (FComplex){(r3 * cos(7 * M_PI / 16.0)), (r3 * sin(7 * M_PI / 16.0))};
       g_32apsk[4] = (FComplex){(r2 * cos(3 * M_PI / 4.0)), (r2 * sin(3 * M_PI / 4.0))};
       g_32apsk[5] = (FComplex){(r2 * cos(7 * M_PI / 12.0)), (r2 * sin(7 * M_PI / 12.0))};
       g_32apsk[6] = (FComplex){(r2 * cos(M_PI / 4.0)), (r2 * sin(M_PI / 4.0))};
       g_32apsk[7] = (FComplex){(r2 * cos(5 * M_PI / 12.0)), (r2 * sin(5 * M_PI / 12.0))};
       g_32apsk[8] = (FComplex){(r3 * cos(13 * M_PI / 16.0)), (r3 * sin(13 * M_PI / 16.0))};
       g_32apsk[9] = (FComplex){(r3 * cos(15 * M_PI / 16.0)), (r3 * sin(15 * M_PI / 16.0))};
       g_32apsk[10] = (FComplex){(r3 * cos(3 * M_PI / 16.0)), (r3 * sin(3 * M_PI / 16.0))};
       g_32apsk[11] = (FComplex){(r3 * cos(M_PI / 16.0)), (r3 * sin(M_PI / 16.0))};
       g_32apsk[12] = (FComplex){(r2 * cos(11 * M_PI / 12.0)), (r2 * sin(11 * M_PI / 12.0))};
       g_32apsk[13] = (FComplex){(r1 * cos(3 * M_PI / 4.0)), (r1 * sin(3 * M_PI / 4.0))};
       g_32apsk[14] = (FComplex){(r2 * cos(M_PI / 12.0)), (r2 * sin(M_PI / 12.0))};
       g_32apsk[15] = (FComplex){(r1 * cos(M_PI / 4.0)), (r1 * sin(M_PI / 4.0))};
       g_32apsk[16] = (FComplex){(r3 * cos(21 * M_PI / 16.0)), (r3 * sin(21 * M_PI / 16.0))};
       g_32apsk[17] = (FComplex){(r3 * cos(23 * M_PI / 16.0)), (r3 * sin(23 * M_PI / 16.0))};
       g_32apsk[18] = (FComplex){(r3 * cos(27 * M_PI / 16.0)), (r3 * sin(27 * M_PI / 16.0))};
       g_32apsk[19] = (FComplex){(r3 * cos(25 * M_PI / 16.0)), (r3 * sin(25 * M_PI / 16.0))};
       g_32apsk[20] = (FComplex){(r2 * cos(5 * M_PI / 4.0)), (r2 * sin(5 * M_PI / 4.0))};
       g_32apsk[21] = (FComplex){(r2 * cos(17 * M_PI / 12.0)), (r2 * sin(17 * M_PI / 12.0))};
       g_32apsk[22] = (FComplex){(r2 * cos(7 * M_PI / 4.0)), (r2 * sin(7 * M_PI / 4.0))};
       g_32apsk[23] = (FComplex){(r2 * cos(19 * M_PI / 12.0)), (r2 * sin(19 * M_PI / 12.0))};
       g_32apsk[24] = (FComplex){(r3 * cos(19 * M_PI / 16.0)), (r3 * sin(19 * M_PI / 16.0))};
       g_32apsk[25] = (FComplex){(r3 * cos(17 * M_PI / 16.0)), (r3 * sin(17 * M_PI / 16.0))};
       g_32apsk[26] = (FComplex){(r3 * cos(29 * M_PI / 16.0)), (r3 * sin(29 * M_PI / 16.0))};
       g_32apsk[27] = (FComplex){(r3 * cos(31 * M_PI / 16.0)), (r3 * sin(31 * M_PI / 16.0))};
       g_32apsk[28] = (FComplex){(r2 * cos(13 * M_PI / 12.0)), (r2 * sin(13 * M_PI / 12.0))};
       g_32apsk[29] = (FComplex){(r1 * cos(5 * M_PI / 4.0)), (r1 * sin(5 * M_PI / 4.0))};
       g_32apsk[30] = (FComplex){(r2 * cos(23 * M_PI / 12.0)), (r2 * sin(23 * M_PI / 12.0))};
       g_32apsk[31] = (FComplex){(r1 * cos(7 * M_PI / 4.0)), (r1 * sin(7 * M_PI / 4.0))};
       demap_update_constellation(g_32apsk, 32);
       break;
     case m_4_8_4_16APSK:
       r4 = m;
       switch(g_format.code_rate) {
         case cR_128_180:
           r1 = r4 / 5.6;
           r3 = r1 * 2.99;
           r2 = r1 * 2.6;
           break;
         case cR_132_180:
           r1 = r4 / 5.6;
           r3 = r1 * 2.86;
           r2 = r1 * 2.6;
           break;
         case cR_140_180:
           r1 = r4 / 5.6;
           r3 = r1 * 3.08;
           r2 = r1 * 2.6;
           break;
         default:
           r1 = 0;
           r2 = 0;
           r3 = 0;
           break;
       }
       g_32apsk[0] = (FComplex){(r1 * cos(M_PI / 4.0)), (r1 * sin(M_PI / 4.0))};
       g_32apsk[1] = (FComplex){(r4 * cos(7 * M_PI / 16.0)), (r4 * sin(7 * M_PI / 16.0))};
       g_32apsk[2] = (FComplex){(r1 * cos(7 * M_PI / 4.0)), (r1 * sin(7 * M_PI / 4.0))};
       g_32apsk[3] = (FComplex){(r4 * cos(25 * M_PI / 16.0)), (r4 * sin(25 * M_PI / 16.0))};
       g_32apsk[4] = (FComplex){(r1 * cos(3 * M_PI / 4.0)), (r1 * sin(3 * M_PI / 4.0))};
       g_32apsk[5] = (FComplex){(r4 * cos(9 * M_PI / 16.0)), (r4 * sin(9 * M_PI / 16.0))};
       g_32apsk[6] = (FComplex){(r1 * cos(5 * M_PI / 4.0)), (r1 * sin(5 * M_PI / 4.0))};
       g_32apsk[7] = (FComplex){(r4 * cos(23 * M_PI / 16.0)), (r4 * sin(23 * M_PI / 16.0))};
       g_32apsk[8] = (FComplex){(r2 * cos(M_PI / 12.0)), (r2 * sin(M_PI / 12.0))};
       g_32apsk[9] = (FComplex){(r4 * cos(M_PI / 16.0)), (r4 * sin(M_PI / 16.0))};
       g_32apsk[10] = (FComplex){(r2 * cos(23 * M_PI / 12.0)), (r2 * sin(23 * M_PI / 12.0))};
       g_32apsk[11] = (FComplex){(r4 * cos(31 * M_PI / 16.0)), (r4 * sin(31 * M_PI / 16.0))};
       g_32apsk[12] = (FComplex){(r2 * cos(11 * M_PI / 12.0)), (r2 * sin(11 * M_PI / 12.0))};
       g_32apsk[13] = (FComplex){(r4 * cos(15 * M_PI / 16.0)), (r4 * sin(15 * M_PI / 16.0))};
       g_32apsk[14] = (FComplex){(r2 * cos(13 * M_PI / 12.0)), (r2 * sin(13 * M_PI / 12.0))};
       g_32apsk[15] = (FComplex){(r4 * cos(17 * M_PI / 16.0)), (r4 * sin(17 * M_PI / 16.0))};
       g_32apsk[16] = (FComplex){(r2 * cos(5 * M_PI / 12.0)), (r2 * sin(5 * M_PI / 12.0))};
       g_32apsk[17] = (FComplex){(r4 * cos(5 * M_PI / 16.0)), (r4 * sin(5 * M_PI / 16.0))};
       g_32apsk[18] = (FComplex){(r2 * cos(19 * M_PI / 12.0)), (r2 * sin(19 * M_PI / 12.0))};
       g_32apsk[19] = (FComplex){(r4 * cos(27 * M_PI / 16.0)), (r4 * sin(27 * M_PI / 16.0))};
       g_32apsk[20] = (FComplex){(r2 * cos(7 * M_PI / 12.0)), (r2 * sin(7 * M_PI / 12.0))};
       g_32apsk[21] = (FComplex){(r4 * cos(11 * M_PI / 16.0)), (r4 * sin(11 * M_PI / 16.0))};
       g_32apsk[22] = (FComplex){(r2 * cos(17 * M_PI / 12.0)), (r2 * sin(17 * M_PI / 12.0))};
       g_32apsk[23] = (FComplex){(r4 * cos(21 * M_PI / 16.0)), (r4 * sin(21 * M_PI / 16.0))};
       g_32apsk[24] = (FComplex){(r3 * cos(M_PI / 4.0)), (r3 * sin(M_PI / 4.0))};
       g_32apsk[25] = (FComplex){(r4 * cos(3 * M_PI / 16.0)), (r4 * sin(3 * M_PI / 16.0))};
       g_32apsk[26] = (FComplex){(r3 * cos(7 * M_PI / 4.0)), (r3 * sin(7 * M_PI / 4.0))};
       g_32apsk[27] = (FComplex){(r4 * cos(29 * M_PI / 16.0)), (r4 * sin(29 * M_PI / 16.0))};
       g_32apsk[28] = (FComplex){(r3 * cos(3 * M_PI / 4.0)), (r3 * sin(3 * M_PI / 4.0))};
       g_32apsk[29] = (FComplex){(r4 * cos(13 * M_PI / 16.0)), (r4 * sin(13 * M_PI / 16.0))};
       g_32apsk[30] = (FComplex){(r3 * cos(5 * M_PI / 4.0)), (r3 * sin(5 * M_PI / 4.0))};
       g_32apsk[31] = (FComplex){(r4 * cos(19 * M_PI / 16.0)), (r4 * sin(19 * M_PI / 16.0))};
       demap_update_constellation(g_32apsk, 32);
       break;
     case m_64APSK:
       r4 = m;
       switch(g_format.code_rate) {
         case cR_128_180:
           r1 = r4 / 3.95;
           r3 = r1 * 2.72;
           r2 = r1 * 1.88;
           break;
         default:
           r1 = 0;
           r2 = 0;
           r3 = 0;
           break;
       }
       g_64apsk[0] = (FComplex){(r1 * cos(M_PI / 16.0)), (r1 * sin(M_PI / 16.0))};
       g_64apsk[1] = (FComplex){(r1 * cos(3 * M_PI / 16.0)), (r1 * sin(3 * M_PI / 16.0))};
       g_64apsk[2] = (FComplex){(r1 * cos(7 * M_PI / 16.0)), (r1 * sin(7 * M_PI / 16.0))};
       g_64apsk[3] = (FComplex){(r1 * cos(5 * M_PI / 16.0)), (r1 * sin(5 * M_PI / 16.0))};
       g_64apsk[4] = (FComplex){(r1 * cos(31 * M_PI / 16.0)), (r1 * sin(31 * M_PI / 16.0))};
       g_64apsk[5] = (FComplex){(r1 * cos(29 * M_PI / 16.0)), (r1 * sin(29 * M_PI / 16.0))};
       g_64apsk[6] = (FComplex){(r1 * cos(25 * M_PI / 16.0)), (r1 * sin(25 * M_PI / 16.0))};
       g_64apsk[7] = (FComplex){(r1 * cos(27 * M_PI / 16.0)), (r1 * sin(27 * M_PI / 16.0))};
       g_64apsk[8] = (FComplex){(r1 * cos(15 * M_PI / 16.0)), (r1 * sin(15 * M_PI / 16.0))};
       g_64apsk[9] = (FComplex){(r1 * cos(13 * M_PI / 16.0)), (r1 * sin(13 * M_PI / 16.0))};
       g_64apsk[10] = (FComplex){(r1 * cos(9 * M_PI / 16.0)), (r1 * sin(9 * M_PI / 16.0))};
       g_64apsk[11] = (FComplex){(r1 * cos(11 * M_PI / 16.0)), (r1 * sin(11 * M_PI / 16.0))};
       g_64apsk[12] = (FComplex){(r1 * cos(17 * M_PI / 16.0)), (r1 * sin(17 * M_PI / 16.0))};
       g_64apsk[13] = (FComplex){(r1 * cos(19 * M_PI / 16.0)), (r1 * sin(19 * M_PI / 16.0))};
       g_64apsk[14] = (FComplex){(r1 * cos(23 * M_PI / 16.0)), (r1 * sin(23 * M_PI / 16.0))};
       g_64apsk[15] = (FComplex){(r1 * cos(21 * M_PI / 16.0)), (r1 * sin(21 * M_PI / 16.0))};
       g_64apsk[16] = (FComplex){(r2 * cos(M_PI / 16.0)), (r2 * sin(M_PI / 16.0))};
       g_64apsk[17] = (FComplex){(r2 * cos(3 * M_PI / 16.0)), (r2 * sin(3 * M_PI / 16.0))};
       g_64apsk[18] = (FComplex){(r2 * cos(7 * M_PI / 16.0)), (r2 * sin(7 * M_PI / 16.0))};
       g_64apsk[19] = (FComplex){(r2 * cos(5 * M_PI / 16.0)), (r2 * sin(5 * M_PI / 16.0))};
       g_64apsk[20] = (FComplex){(r2 * cos(31 * M_PI / 16.0)), (r2 * sin(31* M_PI / 16.0))};
       g_64apsk[21] = (FComplex){(r2 * cos(29 * M_PI / 16.0)), (r2 * sin(29 * M_PI / 16.0))};
       g_64apsk[22] = (FComplex){(r2 * cos(25 * M_PI / 16.0)), (r2 * sin(25 * M_PI / 16.0))};
       g_64apsk[23] = (FComplex){(r2 * cos(27 * M_PI / 16.0)), (r2 * sin(27 * M_PI / 16.0))};
       g_64apsk[24] = (FComplex){(r2 * cos(15 * M_PI / 16.0)), (r2 * sin(15 * M_PI / 16.0))};
       g_64apsk[25] = (FComplex){(r2 * cos(13 * M_PI / 16.0)), (r2 * sin(13 * M_PI / 16.0))};
       g_64apsk[26] = (FComplex){(r2 * cos(9 * M_PI / 16.0)), (r2 * sin(9 * M_PI / 16.0))};
       g_64apsk[27] = (FComplex){(r2 * cos(11 * M_PI / 16.0)), (r2 * sin(11 * M_PI / 16.0))};
       g_64apsk[28] = (FComplex){(r2 * cos(17 * M_PI / 16.0)), (r2 * sin(17 * M_PI / 16.0))};
       g_64apsk[29] = (FComplex){(r2 * cos(19 * M_PI / 16.0)), (r2 * sin(19 * M_PI / 16.0))};
       g_64apsk[30] = (FComplex){(r2 * cos(23 * M_PI / 16.0)), (r2 * sin(23 * M_PI / 16.0))};
       g_64apsk[31] = (FComplex){(r2 * cos(21 * M_PI / 16.0)), (r2 * sin(21 * M_PI / 16.0))};
       g_64apsk[32] = (FComplex){(r4 * cos(M_PI / 16.0)), (r4 * sin(M_PI / 16.0))};
       g_64apsk[33] = (FComplex){(r4 * cos(3 * M_PI / 16.0)), (r4 * sin(3 * M_PI / 16.0))};
       g_64apsk[34] = (FComplex){(r4 * cos(7 * M_PI / 16.0)), (r4 * sin(7 * M_PI / 16.0))};
       g_64apsk[35] = (FComplex){(r4 * cos(5 * M_PI / 16.0)), (r4 * sin(5 * M_PI / 16.0))};
       g_64apsk[36] = (FComplex){(r4 * cos(31 * M_PI / 16.0)), (r4 * sin(31 * M_PI / 16.0))};
       g_64apsk[37] = (FComplex){(r4 * cos(29 * M_PI / 16.0)), (r4 * sin(29 * M_PI / 16.0))};
       g_64apsk[38] = (FComplex){(r4 * cos(25 * M_PI / 16.0)), (r4 * sin(25 * M_PI / 16.0))};
       g_64apsk[39] = (FComplex){(r4 * cos(27 * M_PI / 16.0)), (r4 * sin(27 * M_PI / 16.0))};
       g_64apsk[40] = (FComplex){(r4 * cos(15 * M_PI / 16.0)), (r4 * sin(15 * M_PI / 16.0))};
       g_64apsk[41] = (FComplex){(r4 * cos(13 * M_PI / 16.0)), (r4 * sin(13 * M_PI / 16.0))};
       g_64apsk[42] = (FComplex){(r4 * cos(9 * M_PI / 16.0)), (r4 * sin(9 * M_PI / 16.0))};
       g_64apsk[43] = (FComplex){(r4 * cos(11 * M_PI / 16.0)), (r4 * sin(11 * M_PI / 16.0))};
       g_64apsk[44] = (FComplex){(r4 * cos(17 * M_PI / 16.0)), (r4 * sin(17 * M_PI / 16.0))};
       g_64apsk[45] = (FComplex){(r4 * cos(19 * M_PI / 16.0)), (r4 * sin(19 * M_PI / 16.0))};
       g_64apsk[46] = (FComplex){(r4 * cos(23 * M_PI / 16.0)), (r4 * sin(23 * M_PI / 16.0))};
       g_64apsk[47] = (FComplex){(r4 * cos(21 * M_PI / 16.0)), (r4 * sin(21 * M_PI / 16.0))};
       g_64apsk[48] = (FComplex){(r3 * cos(M_PI / 16.0)), (r3 * sin(M_PI / 16.0))};
       g_64apsk[49] = (FComplex){(r3 * cos(3 * M_PI / 16.0)), (r3 * sin(3 * M_PI / 16.0))};
       g_64apsk[50] = (FComplex){(r3 * cos(7 * M_PI / 16.0)), (r3 * sin(7 * M_PI / 16.0))};
       g_64apsk[51] = (FComplex){(r3 * cos(5 * M_PI / 16.0)), (r3 * sin(5 * M_PI / 16.0))};
       g_64apsk[52] = (FComplex){(r3 * cos(31 * M_PI / 16.0)), (r3 * sin(31 * M_PI / 16.0))};
       g_64apsk[53] = (FComplex){(r3 * cos(29 * M_PI / 16.0)), (r3 * sin(29 * M_PI / 16.0))};
       g_64apsk[54] = (FComplex){(r3 * cos(25 * M_PI / 16.0)), (r3 * sin(25 * M_PI / 16.0))};
       g_64apsk[55] = (FComplex){(r3 * cos(27 * M_PI / 16.0)), (r3 * sin(27 * M_PI / 16.0))};
       g_64apsk[56] = (FComplex){(r3 * cos(15 * M_PI / 16.0)), (r3 * sin(15 * M_PI / 16.0))};
       g_64apsk[57] = (FComplex){(r3 * cos(13 * M_PI / 16.0)), (r3 * sin(13 * M_PI / 16.0))};
       g_64apsk[58] = (FComplex){(r3 * cos(9 * M_PI / 16.0)), (r3 * sin(9 * M_PI / 16.0))};
       g_64apsk[59] = (FComplex){(r3 * cos(11 * M_PI / 16.0)), (r3 * sin(11 * M_PI / 16.0))};
       g_64apsk[60] = (FComplex){(r3 * cos(17 * M_PI / 16.0)), (r3 * sin(17 * M_PI / 16.0))};
       g_64apsk[61] = (FComplex){(r3 * cos(19 * M_PI / 16.0)), (r3 * sin(19 * M_PI / 16.0))};
       g_64apsk[62] = (FComplex){(r3 * cos(23 * M_PI / 16.0)), (r3 * sin(23 * M_PI / 16.0))};
       g_64apsk[63] = (FComplex){(r3 * cos(21 * M_PI / 16.0)), (r3 * sin(21 * M_PI / 16.0))};
       demap_update_constellation(g_64apsk, 64);
       break;
     case m_8_16_20_20APSK:
       r4 = m;
       switch(g_format.code_rate) {
         case cR_7_9:
         case cR_4_5:
           r1 = r4 / 5.2;
           r3 = r1 * 3.6;
           r2 = r1 * 2.2;
           break;
         case cR_5_6:
           r1 = r4 / 5.0;
           r3 = r1 * 3.5;
           r2 = r1 * 2.2;
           break;
         default:
           r1 = 0;
           r2 = 0;
           r3 = 0;
           break;
       }
       g_64apsk[0] = (FComplex){(r2 * cos(25 * M_PI / 16.0)), (r2 * sin(25 * M_PI / 16.0))};
       g_64apsk[1] = (FComplex){(r4 * cos(7 * M_PI / 4.0)), (r4 * sin(7 * M_PI / 4.0))};
       g_64apsk[2] = (FComplex){(r2 * cos(27 * M_PI / 16.0)), (r2 * sin(27 * M_PI / 16.0))};
       g_64apsk[3] = (FComplex){(r3 * cos(7 * M_PI / 4.0)), (r3 * sin(7 * M_PI / 4.0))};
       g_64apsk[4] = (FComplex){(r4 * cos(31 * M_PI / 20.0)), (r4 * sin(31 * M_PI / 20.0))};
       g_64apsk[5] = (FComplex){(r4 * cos(33 * M_PI / 20.0)), (r4 * sin(33 * M_PI / 20.0))};
       g_64apsk[6] = (FComplex){(r3 * cos(31 * M_PI / 20.0)), (r3 * sin(31 * M_PI / 20.0))};
       g_64apsk[7] = (FComplex){(r3 * cos(33 * M_PI / 20.0)), (r3 * sin(33 * M_PI / 20.0))};
       g_64apsk[8] = (FComplex){(r2 * cos(23 * M_PI / 16.0)), (r2 * sin(23 * M_PI / 16.0))};
       g_64apsk[9] = (FComplex){(r4 * cos(5 * M_PI / 4.0)), (r4 * sin(5 * M_PI / 4.0))};
       g_64apsk[10] = (FComplex){(r2 * cos(21 * M_PI / 16.0)), (r2 * sin(21 * M_PI / 16.0))};
       g_64apsk[11] = (FComplex){(r3 * cos(5 * M_PI / 4.0)), (r3 * sin(5 * M_PI / 4.0))};
       g_64apsk[12] = (FComplex){(r4 * cos(29 * M_PI / 20.0)), (r4 * sin(29 * M_PI / 20.0))};
       g_64apsk[13] = (FComplex){(r4 * cos(27 * M_PI / 20.0)), (r4 * sin(27 * M_PI / 20.0))};
       g_64apsk[14] = (FComplex){(r3 * cos(29 * M_PI / 20.0)), (r3 * sin(29 * M_PI / 20.0))};
       g_64apsk[15] = (FComplex){(r3 * cos(27 * M_PI / 20.0)), (r3 * sin(27 * M_PI / 20.0))};
       g_64apsk[16] = (FComplex){(r1 * cos(13 * M_PI / 8.0)), (r1 * sin(13 * M_PI / 8.0))};
       g_64apsk[17] = (FComplex){(r4 * cos(37 * M_PI / 20.0)), (r4 * sin(37 * M_PI / 20.0))};
       g_64apsk[18] = (FComplex){(r2 * cos(29 * M_PI / 16.0)), (r2 * sin(29 * M_PI / 16.0))};
       g_64apsk[19] = (FComplex){(r3 * cos(37 * M_PI / 20.0)), (r3 * sin(37 * M_PI / 20.0))};
       g_64apsk[20] = (FComplex){(r1 * cos(15 * M_PI / 8.0)), (r1 * sin(15 * M_PI / 8.0))};
       g_64apsk[21] = (FComplex){(r4 * cos(39 * M_PI / 20.0)), (r4 * sin(39 * M_PI / 20.0))};
       g_64apsk[22] = (FComplex){(r2 * cos(31 * M_PI / 16.0)), (r2 * sin(31 * M_PI / 16.0))};
       g_64apsk[23] = (FComplex){(r3 * cos(39 * M_PI / 20.0)), (r3 * sin(39 * M_PI / 20.0))};
       g_64apsk[24] = (FComplex){(r1 * cos(11 * M_PI / 8.0)), (r1 * sin(11 * M_PI / 8.0))};
       g_64apsk[25] = (FComplex){(r4 * cos(23 * M_PI / 20.0)), (r4 * sin(23 * M_PI / 20.0))};
       g_64apsk[26] = (FComplex){(r2 * cos(19 * M_PI / 16.0)), (r2 * sin(19 * M_PI / 16.0))};
       g_64apsk[27] = (FComplex){(r3 * cos(23 * M_PI / 20.0)), (r3 * sin(23 * M_PI / 20.0))};
       g_64apsk[28] = (FComplex){(r1 * cos(9 * M_PI / 8.0)), (r1 * sin(9 * M_PI / 8.0))};
       g_64apsk[29] = (FComplex){(r4 * cos(21 * M_PI / 20.0)), (r4 * sin(21 * M_PI / 20.0))};
       g_64apsk[30] = (FComplex){(r2 * cos(17 * M_PI / 16.0)), (r2 * sin(17 * M_PI / 16.0))};
       g_64apsk[31] = (FComplex){(r3 * cos(21 * M_PI / 20.0)), (r3 * sin(21 * M_PI / 20.0))};
       g_64apsk[32] = (FComplex){(r2 * cos(7 * M_PI / 16.0)), (r2 * sin(7 * M_PI / 16.0))};
       g_64apsk[33] = (FComplex){(r4 * cos(M_PI / 4.0)), (r4 * sin(M_PI / 4.0))};
       g_64apsk[34] = (FComplex){(r2 * cos(5 * M_PI / 16.0)), (r2 * sin(5 * M_PI / 16.0))};
       g_64apsk[35] = (FComplex){(r3 * cos(M_PI / 4.0)), (r3 * sin(M_PI / 4.0))};
       g_64apsk[36] = (FComplex){(r4 * cos(9 * M_PI / 20.0)), (r4 * sin(9 * M_PI / 20.0))};
       g_64apsk[37] = (FComplex){(r4 * cos(7 * M_PI / 20.0)), (r4 * sin(7 * M_PI / 20.0))};
       g_64apsk[38] = (FComplex){(r3 * cos(9 * M_PI / 20.0)), (r3 * sin(9 * M_PI / 20.0))};
       g_64apsk[39] = (FComplex){(r3 * cos(7 * M_PI / 20.0)), (r3 * sin(7 * M_PI / 20.0))};
       g_64apsk[40] = (FComplex){(r2 * cos(9 * M_PI / 16.0)), (r2 * sin(9 * M_PI / 16.0))};
       g_64apsk[41] = (FComplex){(r4 * cos(3 * M_PI / 4.0)), (r4 * sin(3 * M_PI / 4.0))};
       g_64apsk[42] = (FComplex){(r2 * cos(11 * M_PI / 16.0)), (r2 * sin(11 * M_PI / 16.0))};
       g_64apsk[43] = (FComplex){(r3 * cos(3 * M_PI / 4.0)), (r3 * sin(3 * M_PI / 4.0))};
       g_64apsk[44] = (FComplex){(r4 * cos(11 * M_PI / 20.0)), (r4 * sin(11 * M_PI / 20.0))};
       g_64apsk[45] = (FComplex){(r4 * cos(13 * M_PI / 20.0)), (r4 * sin(13 * M_PI / 20.0))};
       g_64apsk[46] = (FComplex){(r3 * cos(11 * M_PI / 20.0)), (r3 * sin(11 * M_PI / 20.0))};
       g_64apsk[47] = (FComplex){(r3 * cos(13 * M_PI / 20.0)), (r3 * sin(13 * M_PI / 20.0))};
       g_64apsk[48] = (FComplex){(r1 * cos(3 * M_PI / 8.0)), (r1 * sin(3 * M_PI / 8.0))};
       g_64apsk[49] = (FComplex){(r4 * cos(3 * M_PI / 20.0)), (r4 * sin(3 * M_PI / 20.0))};
       g_64apsk[50] = (FComplex){(r2 * cos(3 * M_PI / 16.0)), (r2 * sin(3 * M_PI / 16.0))};
       g_64apsk[51] = (FComplex){(r3 * cos(3 * M_PI / 20.0)), (r3 * sin(3 * M_PI / 20.0))};
       g_64apsk[52] = (FComplex){(r1 * cos(M_PI / 8.0)), (r1 * sin(M_PI / 8.0))};
       g_64apsk[53] = (FComplex){(r4 * cos(M_PI / 20.0)), (r4 * sin(M_PI / 20.0))};
       g_64apsk[54] = (FComplex){(r2 * cos(M_PI / 16.0)), (r2 * sin(M_PI / 16.0))};
       g_64apsk[55] = (FComplex){(r3 * cos(M_PI / 20.0)), (r3 * sin(M_PI / 20.0))};
       g_64apsk[56] = (FComplex){(r1 * cos(5 * M_PI / 8.0)), (r1 * sin(5 * M_PI / 8.0))};
       g_64apsk[57] = (FComplex){(r4 * cos(17 * M_PI / 20.0)), (r4 * sin(17 * M_PI / 20.0))};
       g_64apsk[58] = (FComplex){(r2 * cos(13 * M_PI / 16.0)), (r2 * sin(13 * M_PI / 16.0))};
       g_64apsk[59] = (FComplex){(r3 * cos(17 * M_PI / 20.0)), (r3 * sin(17 * M_PI / 20.0))};
       g_64apsk[60] = (FComplex){(r1 * cos(7 * M_PI / 8.0)), (r1 * sin(7 * M_PI / 8.0))};
       g_64apsk[61] = (FComplex){(r4 * cos(19 * M_PI / 20.0)), (r4 * sin(19 * M_PI / 20.0))};
       g_64apsk[62] = (FComplex){(r2 * cos(15 * M_PI / 16.0)), (r2 * sin(15 * M_PI / 16.0))};
       g_64apsk[63] = (FComplex){(r3 * cos(19 * M_PI / 20.0)), (r3 * sin(19 * M_PI / 20.0))};
       demap_update_constellation(g_64apsk, 64);
       break;
     case m_4_12_20_28APSK:
       r4 = m;
       switch(g_format.code_rate) {
         case cR_132_180:
           r1 = r4 / 7.0;
           r3 = r1 * 4.3;
           r2 = r1 * 2.4;
           break;
         default:
           r1 = 0;
           r2 = 0;
           r3 = 0;
           break;
       }
       g_64apsk[0] = (FComplex){(r4 * cos(M_PI / 4.0)), (r4 * sin(M_PI / 4.0))};
       g_64apsk[1] = (FComplex){(r4 * cos(7 * M_PI / 4.0)), (r4 * sin(7 * M_PI / 4.0))};
       g_64apsk[2] = (FComplex){(r4 * cos(3 * M_PI / 4.0)), (r4 * sin(3 * M_PI / 4.0))};
       g_64apsk[3] = (FComplex){(r4 * cos(5 * M_PI / 4.0)), (r4 * sin(5 * M_PI / 4.0))};
       g_64apsk[4] = (FComplex){(r4 * cos(13 * M_PI / 28.0)), (r4 * sin(13 * M_PI / 28.0))};
       g_64apsk[5] = (FComplex){(r4 * cos(43 * M_PI / 28.0)), (r4 * sin(43 * M_PI / 28.0))};
       g_64apsk[6] = (FComplex){(r4 * cos(15 * M_PI / 28.0)), (r4 * sin(15 * M_PI / 28.0))};
       g_64apsk[7] = (FComplex){(r4 * cos(41 * M_PI / 28.0)), (r4 * sin(41 * M_PI / 28.0))};
       g_64apsk[8] = (FComplex){(r4 * cos(M_PI / 28.0)), (r4 * sin(M_PI / 28.0))};
       g_64apsk[9] = (FComplex){(r4 * cos(55 * M_PI / 28.0)), (r4 * sin(55 * M_PI / 28.0))};
       g_64apsk[10] = (FComplex){(r4 * cos(27 * M_PI / 28.0)), (r4 * sin(27 * M_PI / 28.0))};
       g_64apsk[11] = (FComplex){(r4 * cos(29 * M_PI / 28.0)), (r4 * sin(29 * M_PI / 28.0))};
       g_64apsk[12] = (FComplex){(r1 * cos(M_PI / 4.0)), (r1 * sin(M_PI / 4.0))};
       g_64apsk[13] = (FComplex){(r1 * cos(7 * M_PI / 4.0)), (r1 * sin(7 * M_PI / 4.0))};
       g_64apsk[14] = (FComplex){(r1 * cos(3 * M_PI / 4.0)), (r1 * sin(3 * M_PI / 4.0))};
       g_64apsk[15] = (FComplex){(r1 * cos(5 * M_PI / 4.0)), (r1 * sin(5 * M_PI / 4.0))};
       g_64apsk[16] = (FComplex){(r4 * cos(9 * M_PI / 28.0)), (r4 * sin(9 * M_PI / 28.0))};
       g_64apsk[17] = (FComplex){(r4 * cos(47 * M_PI / 28.0)), (r4 * sin(47 * M_PI / 28.0))};
       g_64apsk[18] = (FComplex){(r4 * cos(19 * M_PI / 28.0)), (r4 * sin(19 * M_PI / 28.0))};
       g_64apsk[19] = (FComplex){(r4 * cos(37 * M_PI / 28.0)), (r4 * sin(37 * M_PI / 28.0))};
       g_64apsk[20] = (FComplex){(r4 * cos(11 * M_PI / 28.0)), (r4 * sin(11 * M_PI / 28.0))};
       g_64apsk[21] = (FComplex){(r4 * cos(45 * M_PI / 28.0)), (r4 * sin(45 * M_PI / 28.0))};
       g_64apsk[22] = (FComplex){(r4 * cos(17 * M_PI / 28.0)), (r4 * sin(17 * M_PI / 28.0))};
       g_64apsk[23] = (FComplex){(r4 * cos(39 * M_PI / 28.0)), (r4 * sin(39 * M_PI / 28.0))};
       g_64apsk[24] = (FComplex){(r3 * cos(M_PI / 20.0)), (r3 * sin(M_PI / 20.0))};
       g_64apsk[25] = (FComplex){(r3 * cos(39 * M_PI / 20.0)), (r3 * sin(39 * M_PI / 20.0))};
       g_64apsk[26] = (FComplex){(r3 * cos(19 * M_PI / 20.0)), (r3 * sin(19 * M_PI / 20.0))};
       g_64apsk[27] = (FComplex){(r3 * cos(21 * M_PI / 20.0)), (r3 * sin(21 * M_PI / 20.0))};
       g_64apsk[28] = (FComplex){(r2 * cos(M_PI / 12.0)), (r2 * sin(M_PI / 12.0))};
       g_64apsk[29] = (FComplex){(r2 * cos(23 * M_PI / 12.0)), (r2 * sin(23 * M_PI / 12.0))};
       g_64apsk[30] = (FComplex){(r2 * cos(11 * M_PI / 12.0)), (r2 * sin(11 * M_PI / 12.0))};
       g_64apsk[31] = (FComplex){(r2 * cos(13 * M_PI / 12.0)), (r2 * sin(13 * M_PI / 12.0))};
       g_64apsk[32] = (FComplex){(r4 * cos(5 * M_PI / 28.0)), (r4 * sin(5 * M_PI / 28.0))};
       g_64apsk[33] = (FComplex){(r4 * cos(51 * M_PI / 28.0)), (r4 * sin(51 * M_PI / 28.0))};
       g_64apsk[34] = (FComplex){(r4 * cos(23 * M_PI / 28.0)), (r4 * sin(23 * M_PI / 28.0))};
       g_64apsk[35] = (FComplex){(r4 * cos(33 * M_PI / 28.0)), (r4 * sin(33 * M_PI / 28.0))};
       g_64apsk[36] = (FComplex){(r3 * cos(9 * M_PI / 20.0)), (r3 * sin(9 * M_PI / 20.0))};
       g_64apsk[37] = (FComplex){(r3 * cos(31 * M_PI / 20.0)), (r3 * sin(31 * M_PI / 20.0))};
       g_64apsk[38] = (FComplex){(r3 * cos(11 * M_PI / 20.0)), (r3 * sin(11 * M_PI / 20.0))};
       g_64apsk[39] = (FComplex){(r3 * cos(29 * M_PI / 20.0)), (r3 * sin(29 * M_PI / 20.0))};
       g_64apsk[40] = (FComplex){(r4 * cos(3 * M_PI / 28.0)), (r4 * sin(3 * M_PI / 28.0))};
       g_64apsk[41] = (FComplex){(r4 * cos(53 * M_PI / 28.0)), (r4 * sin(53 * M_PI / 28.0))};
       g_64apsk[42] = (FComplex){(r4 * cos(25 * M_PI / 28.0)), (r4 * sin(25 * M_PI / 28.0))};
       g_64apsk[43] = (FComplex){(r4 * cos(31 * M_PI / 28.0)), (r4 * sin(31 * M_PI / 28.0))};
       g_64apsk[44] = (FComplex){(r2 * cos(5 * M_PI / 12.0)), (r2 * sin(5 * M_PI / 12.0))};
       g_64apsk[45] = (FComplex){(r2 * cos(19 * M_PI / 12.0)), (r2 * sin(19 * M_PI / 12.0))};
       g_64apsk[46] = (FComplex){(r2 * cos(7 * M_PI / 12.0)), (r2 * sin(7 * M_PI / 12.0))};
       g_64apsk[47] = (FComplex){(r2 * cos(17 * M_PI / 12.0)), (r2 * sin(17 * M_PI / 12.0))};
       g_64apsk[48] = (FComplex){(r3 * cos(M_PI / 4.0)), (r3 * sin(M_PI / 4.0))};
       g_64apsk[49] = (FComplex){(r3 * cos(7 * M_PI / 4.0)), (r3 * sin(7 * M_PI / 4.0))};
       g_64apsk[50] = (FComplex){(r3 * cos(3 * M_PI / 4.0)), (r3 * sin(3 * M_PI / 4.0))};
       g_64apsk[51] = (FComplex){(r3 * cos(5 * M_PI / 4.0)), (r3 * sin(5 * M_PI / 4.0))};
       g_64apsk[52] = (FComplex){(r3 * cos(7 * M_PI / 20.0)), (r3 * sin(7 * M_PI / 20.0))};
       g_64apsk[53] = (FComplex){(r3 * cos(33 * M_PI / 20.0)), (r3 * sin(33 * M_PI / 20.0))};
       g_64apsk[54] = (FComplex){(r3 * cos(13 * M_PI / 20.0)), (r3 * sin(13 * M_PI / 20.0))};
       g_64apsk[55] = (FComplex){(r3 * cos(27 * M_PI / 20.0)), (r3 * sin(27 * M_PI / 20.0))};
       g_64apsk[56] = (FComplex){(r3 * cos(3 * M_PI / 20.0)), (r3 * sin(3 * M_PI / 20.0))};
       g_64apsk[57] = (FComplex){(r3 * cos(37 * M_PI / 20.0)), (r3 * sin(37 * M_PI / 20.0))};
       g_64apsk[58] = (FComplex){(r3 * cos(17 * M_PI / 20.0)), (r3 * sin(17 * M_PI / 20.0))};
       g_64apsk[59] = (FComplex){(r3 * cos(23 * M_PI / 20.0)), (r3 * sin(23 * M_PI / 20.0))};
       g_64apsk[60] = (FComplex){(r2 * cos(M_PI / 4.0)), (r2 * sin(M_PI / 4.0))};
       g_64apsk[61] = (FComplex){(r2 * cos(7 * M_PI / 4.0)), (r2 * sin(7 * M_PI / 4.0))};
       g_64apsk[62] = (FComplex){(r2 * cos(3 * M_PI / 4.0)), (r2 * sin(3 * M_PI / 4.0))};
       g_64apsk[63] = (FComplex){(r2 * cos(5 * M_PI / 4.0)), (r2 * sin(5 * M_PI / 4.0))};
       demap_update_constellation(g_64apsk, 64);
       break;
     case m_128APSK:
       r6 = m;
       switch(g_format.code_rate) {
         case cR_135_180:
           r1 = r6 / 3.819;
           r5 = r1 * 2.75;
           r4 = r1 * 2.681;
           r3 = r1 * 2.118;
           r2 = r1 * 1.715;
           break;
         case cR_140_180:
           r1 = r6 / 3.733;
           r5 = r1 * 2.75;
           r4 = r1 * 2.681;
           r3 = r1 * 2.118;
           r2 = r1 * 1.715;
           break;
         default:
           r1 = 0;
           r2 = 0;
           r3 = 0;
           r4 = 0;
           r5 = 0;
           break;
       }
       g_128apsk[0] = (FComplex){(r1 * cos(83 * M_PI / 1260.0)), (r1 * sin(83 * M_PI / 1260.0))};
       g_128apsk[1] = (FComplex){(r6 * cos(11 * M_PI / 105.0)), (r6 * sin(11 * M_PI / 105.0))};
       g_128apsk[2] = (FComplex){(r6 * cos(37 * M_PI / 1680.0)), (r6 * sin(37 * M_PI / 1680.0))};
       g_128apsk[3] = (FComplex){(r6 * cos(11 * M_PI / 168.0)), (r6 * sin(11 * M_PI / 168.0))};
       g_128apsk[4] = (FComplex){(r2 * cos(121 * M_PI / 2520.0)), (r2 * sin(121 * M_PI / 2520.0))};
       g_128apsk[5] = (FComplex){(r3 * cos(23 * M_PI / 280.0)), (r3 * sin(23 * M_PI / 280.0))};
       g_128apsk[6] = (FComplex){(r5 * cos(19 * M_PI / 720.0)), (r5 * sin(19 * M_PI / 720.0))};
       g_128apsk[7] = (FComplex){(r4 * cos(61 * M_PI / 720.0)), (r4 * sin(61 * M_PI / 720.0))};
       g_128apsk[8] = (FComplex){(r1 * cos(103 * M_PI / 560.0)), (r1 * sin(103 * M_PI / 560.0))};
       g_128apsk[9] = (FComplex){(r6 * cos(61 * M_PI / 420.0)), (r6 * sin(61 * M_PI / 420.0))};
       g_128apsk[10] = (FComplex){(r6 * cos(383 * M_PI / 1680.0)), (r6 * sin(383 * M_PI / 1680.0))};
       g_128apsk[11] = (FComplex){(r6 * cos(929 * M_PI / 5040.0)), (r6 * sin(929 * M_PI / 5040.0))};
       g_128apsk[12] = (FComplex){(r2 * cos(113 * M_PI / 560.0)), (r2 * sin(113 * M_PI / 560.0))};
       g_128apsk[13] = (FComplex){(r3 * cos(169 * M_PI / 1008.0)), (r3 * sin(169 * M_PI / 1008.0))};
       g_128apsk[14] = (FComplex){(r5 * cos(563 * M_PI / 2520.0)), (r5 * sin(563 * M_PI / 2520.0))};
       g_128apsk[15] = (FComplex){(r4 * cos(139 * M_PI / 840.0)), (r4 * sin(139 * M_PI / 840.0))};
       g_128apsk[16] = (FComplex){(r1 * cos(243 * M_PI / 560.0)), (r1 * sin(243 * M_PI / 560.0))};
       g_128apsk[17] = (FComplex){(r6 * cos(1993 * M_PI / 5040.0)), (r6 * sin(1993 * M_PI / 5040.0))};
       g_128apsk[18] = (FComplex){(r6 * cos(43 * M_PI / 90.0)), (r6 * sin(43 * M_PI / 90.0))};
       g_128apsk[19] = (FComplex){(r6 * cos(73 * M_PI / 168.0)), (r6 * sin(73 * M_PI / 168.0))};
       g_128apsk[20] = (FComplex){(r2 * cos(1139 * M_PI / 2520.0)), (r2 * sin(1139 * M_PI / 2520.0))};
       g_128apsk[21] = (FComplex){(r3 * cos(117 * M_PI / 280.0)), (r3 * sin(117 * M_PI / 280.0))};
       g_128apsk[22] = (FComplex){(r5 * cos(341 * M_PI / 720.0)), (r5 * sin(341 * M_PI / 720.0))};
       g_128apsk[23] = (FComplex){(r4 * cos(349 * M_PI / 840.0)), (r4 * sin(349 * M_PI / 840.0))};
       g_128apsk[24] = (FComplex){(r1 * cos(177 * M_PI / 560.0)), (r1 * sin(177 * M_PI / 560.0))};
       g_128apsk[25] = (FComplex){(r6 * cos(1789 * M_PI / 5040.0)), (r6 * sin(1789 * M_PI / 5040.0))};
       g_128apsk[26] = (FComplex){(r6 * cos(49 * M_PI / 180.0)), (r6 * sin(49 * M_PI / 180.0))};
       g_128apsk[27] = (FComplex){(r6 * cos(53 * M_PI / 168.0)), (r6 * sin(53 * M_PI / 168.0))};
       g_128apsk[28] = (FComplex){(r2 * cos(167 * M_PI / 560.0)), (r2 * sin(167 * M_PI / 560.0))};
       g_128apsk[29] = (FComplex){(r3 * cos(239 * M_PI / 720.0)), (r3 * sin(239 * M_PI / 720.0))};
       g_128apsk[30] = (FComplex){(r5 * cos(199 * M_PI / 720.0)), (r5 * sin(199 * M_PI / 720.0))};
       g_128apsk[31] = (FComplex){(r4 * cos(281 * M_PI / 840.0)), (r4 * sin(281 * M_PI / 840.0))};
       g_128apsk[32] = (FComplex){(r1 * cos(1177 * M_PI / 1260.0)), (r1 * sin(1177 * M_PI / 1260.0))};
       g_128apsk[33] = (FComplex){(r6 * cos(94 * M_PI / 105.0)), (r6 * sin(94 * M_PI / 105.0))};
       g_128apsk[34] = (FComplex){(r6 * cos(1643 * M_PI / 1680.0)), (r6 * sin(1643 * M_PI / 1680.0))};
       g_128apsk[35] = (FComplex){(r6 * cos(157 * M_PI / 168.0)), (r6 * sin(157 * M_PI / 168.0))};
       g_128apsk[36] = (FComplex){(r2 * cos(2399 * M_PI / 2520.0)), (r2 * sin(2399 * M_PI / 2520.0))};
       g_128apsk[37] = (FComplex){(r3 * cos(257 * M_PI / 280.0)), (r3 * sin(257 * M_PI / 280.0))};
       g_128apsk[38] = (FComplex){(r5 * cos(701 * M_PI / 720.0)), (r5 * sin(701 * M_PI / 720.0))};
       g_128apsk[39] = (FComplex){(r4 * cos(659 * M_PI / 720.0)), (r4 * sin(659 * M_PI / 720.0))};
       g_128apsk[40] = (FComplex){(r1 * cos(457 * M_PI / 560.0)), (r1 * sin(457 * M_PI / 560.0))};
       g_128apsk[41] = (FComplex){(r6 * cos(359 * M_PI / 420.0)), (r6 * sin(359 * M_PI / 420.0))};
       g_128apsk[42] = (FComplex){(r6 * cos(1297 * M_PI / 1680.0)), (r6 * sin(1297 * M_PI / 1680.0))};
       g_128apsk[43] = (FComplex){(r6 * cos(4111 * M_PI / 5040.0)), (r6 * sin(4111 * M_PI / 5040.0))};
       g_128apsk[44] = (FComplex){(r2 * cos(447 * M_PI / 560.0)), (r2 * sin(447 * M_PI / 560.0))};
       g_128apsk[45] = (FComplex){(r3 * cos(839 * M_PI / 1008.0)), (r3 * sin(839 * M_PI / 1008.0))};
       g_128apsk[46] = (FComplex){(r5 * cos(1957 * M_PI / 2520.0)), (r5 * sin(1957 * M_PI / 2520.0))};
       g_128apsk[47] = (FComplex){(r4 * cos(701 * M_PI / 840.0)), (r4 * sin(701 * M_PI / 840.0))};
       g_128apsk[48] = (FComplex){(r1 * cos(317 * M_PI / 560.0)), (r1 * sin(317 * M_PI / 560.0))};
       g_128apsk[49] = (FComplex){(r6 * cos(3047 * M_PI / 5040.0)), (r6 * sin(3047 * M_PI / 5040.0))};
       g_128apsk[50] = (FComplex){(r6 * cos(47 * M_PI / 90.0)), (r6 * sin(47 * M_PI / 90.0))};
       g_128apsk[51] = (FComplex){(r6 * cos(95 * M_PI / 168.0)), (r6 * sin(95 * M_PI / 168.0))};
       g_128apsk[52] = (FComplex){(r2 * cos(1381 * M_PI / 2520.0)), (r2 * sin(1381 * M_PI / 2520.0))};
       g_128apsk[53] = (FComplex){(r3 * cos(163 * M_PI / 280.0)), (r3 * sin(163 * M_PI / 280.0))};
       g_128apsk[54] = (FComplex){(r5 * cos(379 * M_PI / 720.0)), (r5 * sin(379 * M_PI / 720.0))};
       g_128apsk[55] = (FComplex){(r4 * cos(491 * M_PI / 840.0)), (r4 * sin(491 * M_PI / 840.0))};
       g_128apsk[56] = (FComplex){(r1 * cos(383 * M_PI / 560.0)), (r1 * sin(383 * M_PI / 560.0))};
       g_128apsk[57] = (FComplex){(r6 * cos(3251 * M_PI / 5040.0)), (r6 * sin(3251 * M_PI / 5040.0))};
       g_128apsk[58] = (FComplex){(r6 * cos(131 * M_PI / 180.0)), (r6 * sin(131 * M_PI / 180.0))};
       g_128apsk[59] = (FComplex){(r6 * cos(115 * M_PI / 168.0)), (r6 * sin(115 * M_PI / 168.0))};
       g_128apsk[60] = (FComplex){(r2 * cos(393 * M_PI / 560.0)), (r2 * sin(393 * M_PI / 560.0))};
       g_128apsk[61] = (FComplex){(r3 * cos(481 * M_PI / 720.0)), (r3 * sin(481 * M_PI / 720.0))};
       g_128apsk[62] = (FComplex){(r5 * cos(521 * M_PI / 720.0)), (r5 * sin(521 * M_PI / 720.0))};
       g_128apsk[63] = (FComplex){(r4 * cos(559 * M_PI / 840.0)), (r4 * sin(559 * M_PI / 840.0))};
       g_128apsk[64] = (FComplex){(r1 * cos(2437 * M_PI / 1260.0)), (r1 * sin(2437 * M_PI / 1260.0))};
       g_128apsk[65] = (FComplex){(r6 * cos(199 * M_PI / 105.0)), (r6 * sin(199 * M_PI / 105.0))};
       g_128apsk[66] = (FComplex){(r6 * cos(3323 * M_PI / 1680.0)), (r6 * sin(3323 * M_PI / 1680.0))};
       g_128apsk[67] = (FComplex){(r6 * cos(325 * M_PI / 168.0)), (r6 * sin(325 * M_PI / 168.0))};
       g_128apsk[68] = (FComplex){(r2 * cos(4919 * M_PI / 2520.0)), (r2 * sin(4919 * M_PI / 2520.0))};
       g_128apsk[69] = (FComplex){(r3 * cos(537 * M_PI / 280.0)), (r3 * sin(537 * M_PI / 280.0))};
       g_128apsk[70] = (FComplex){(r5 * cos(1421 * M_PI / 720.0)), (r5 * sin(1421 * M_PI / 720.0))};
       g_128apsk[71] = (FComplex){(r4 * cos(1379 * M_PI / 720.0)), (r4 * sin(1379 * M_PI / 720.0))};
       g_128apsk[72] = (FComplex){(r1 * cos(1017 * M_PI / 560.0)), (r1 * sin(1017 * M_PI / 560.0))};
       g_128apsk[73] = (FComplex){(r6 * cos(779 * M_PI / 420.0)), (r6 * sin(779 * M_PI / 420.0))};
       g_128apsk[74] = (FComplex){(r6 * cos(2977 * M_PI / 1680.0)), (r6 * sin(2977 * M_PI / 1680.0))};
       g_128apsk[75] = (FComplex){(r6 * cos(9151 * M_PI / 5040.0)), (r6 * sin(9151 * M_PI / 5040.0))};
       g_128apsk[76] = (FComplex){(r2 * cos(1007 * M_PI / 560.0)), (r2 * sin(1007 * M_PI / 560.0))};
       g_128apsk[77] = (FComplex){(r3 * cos(1847 * M_PI / 1008.0)), (r3 * sin(1847 * M_PI / 1008.0))};
       g_128apsk[78] = (FComplex){(r5 * cos(4477 * M_PI / 2520.0)), (r5 * sin(4477 * M_PI / 2520.0))};
       g_128apsk[79] = (FComplex){(r4 * cos(1541 * M_PI / 840.0)), (r4 * sin(1541 * M_PI / 840.0))};
       g_128apsk[80] = (FComplex){(r1 * cos(877 * M_PI / 560.0)), (r1 * sin(877 * M_PI / 560.0))};
       g_128apsk[81] = (FComplex){(r6 * cos(8087 * M_PI / 5040.0)), (r6 * sin(8087 * M_PI / 5040.0))};
       g_128apsk[82] = (FComplex){(r6 * cos(137 * M_PI / 90.0)), (r6 * sin(137 * M_PI / 90.0))};
       g_128apsk[83] = (FComplex){(r6 * cos(263 * M_PI / 168.0)), (r6 * sin(263 * M_PI / 168.0))};
       g_128apsk[84] = (FComplex){(r2 * cos(3901 * M_PI / 2520.0)), (r2 * sin(3901 * M_PI / 2520.0))};
       g_128apsk[85] = (FComplex){(r3 * cos(443 * M_PI / 280.0)), (r3 * sin(443 * M_PI / 280.0))};
       g_128apsk[86] = (FComplex){(r5 * cos(1099 * M_PI / 720.0)), (r5 * sin(1099 * M_PI / 720.0))};
       g_128apsk[87] = (FComplex){(r4 * cos(1331 * M_PI / 840.0)), (r4 * sin(1331 * M_PI / 840.0))};
       g_128apsk[88] = (FComplex){(r1 * cos(943 * M_PI / 560.0)), (r1 * sin(943 * M_PI / 560.0))};
       g_128apsk[89] = (FComplex){(r6 * cos(8291 * M_PI / 5040.0)), (r6 * sin(8291 * M_PI / 5040.0))};
       g_128apsk[90] = (FComplex){(r6 * cos(311 * M_PI / 180.0)), (r6 * sin(311 * M_PI / 180.0))};
       g_128apsk[91] = (FComplex){(r6 * cos(283 * M_PI / 168.0)), (r6 * sin(283 * M_PI / 168.0))};
       g_128apsk[92] = (FComplex){(r2 * cos(953 * M_PI / 560.0)), (r2 * sin(953 * M_PI / 560.0))};
       g_128apsk[93] = (FComplex){(r3 * cos(1201 * M_PI / 720.0)), (r3 * sin(1201 * M_PI / 720.0))};
       g_128apsk[94] = (FComplex){(r5 * cos(1241 * M_PI / 720.0)), (r5 * sin(1241 * M_PI / 720.0))};
       g_128apsk[95] = (FComplex){(r4 * cos(1399 * M_PI / 840.0)), (r4 * sin(1399 * M_PI / 840.0))};
       g_128apsk[96] = (FComplex){(r1 * cos(1343 * M_PI / 1260.0)), (r1 * sin(1343 * M_PI / 1260.0))};
       g_128apsk[97] = (FComplex){(r6 * cos(116 * M_PI / 105.0)), (r6 * sin(116 * M_PI / 105.0))};
       g_128apsk[98] = (FComplex){(r6 * cos(1717 * M_PI / 1680.0)), (r6 * sin(1717 * M_PI / 1680.0))};
       g_128apsk[99] = (FComplex){(r6 * cos(179 * M_PI / 168.0)), (r6 * sin(179 * M_PI / 168.0))};
       g_128apsk[100] = (FComplex){(r2 * cos(2641 * M_PI / 2520.0)), (r2 * sin(2641 * M_PI / 2520.0))};
       g_128apsk[101] = (FComplex){(r3 * cos(303 * M_PI / 280.0)), (r3 * sin(303 * M_PI / 280.0))};
       g_128apsk[102] = (FComplex){(r5 * cos(739 * M_PI / 720.0)), (r5 * sin(739 * M_PI / 720.0))};
       g_128apsk[103] = (FComplex){(r4 * cos(781 * M_PI / 720.0)), (r4 * sin(781 * M_PI / 720.0))};
       g_128apsk[104] = (FComplex){(r1 * cos(663 * M_PI / 560.0)), (r1 * sin(663 * M_PI / 560.0))};
       g_128apsk[105] = (FComplex){(r6 * cos(481 * M_PI / 420.0)), (r6 * sin(481 * M_PI / 420.0))};
       g_128apsk[106] = (FComplex){(r6 * cos(2063 * M_PI / 1680.0)), (r6 * sin(2063 * M_PI / 1680.0))};
       g_128apsk[107] = (FComplex){(r6 * cos(5969 * M_PI / 5040.0)), (r6 * sin(5969 * M_PI / 5040.0))};
       g_128apsk[108] = (FComplex){(r2 * cos(673 * M_PI / 560.0)), (r2 * sin(673 * M_PI / 560.0))};
       g_128apsk[109] = (FComplex){(r3 * cos(1177 * M_PI / 1008.0)), (r3 * sin(1177 * M_PI / 1008.0))};
       g_128apsk[110] = (FComplex){(r5 * cos(3083 * M_PI / 2520.0)), (r5 * sin(3083 * M_PI / 2520.0))};
       g_128apsk[111] = (FComplex){(r4 * cos(979 * M_PI / 840.0)), (r4 * sin(979 * M_PI / 840.0))};
       g_128apsk[112] = (FComplex){(r1 * cos(803 * M_PI / 560.0)), (r1 * sin(803 * M_PI / 560.0))};
       g_128apsk[113] = (FComplex){(r6 * cos(7033 * M_PI / 5040.0)), (r6 * sin(7033 * M_PI / 5040.0))};
       g_128apsk[114] = (FComplex){(r6 * cos(133 * M_PI / 90.0)), (r6 * sin(133 * M_PI / 90.0))};
       g_128apsk[115] = (FComplex){(r6 * cos(241 * M_PI / 168.0)), (r6 * sin(241 * M_PI / 168.0))};
       g_128apsk[116] = (FComplex){(r2 * cos(3659 * M_PI / 2520.0)), (r2 * sin(3659 * M_PI / 2520.0))};
       g_128apsk[117] = (FComplex){(r3 * cos(397 * M_PI / 280.0)), (r3 * sin(397 * M_PI / 280.0))};
       g_128apsk[118] = (FComplex){(r5 * cos(1061 * M_PI / 720.0)), (r5 * sin(1061 * M_PI / 720.0))};
       g_128apsk[119] = (FComplex){(r4 * cos(1189 * M_PI / 840.0)), (r4 * sin(1189 * M_PI / 840.0))};
       g_128apsk[120] = (FComplex){(r1 * cos(737 * M_PI / 560.0)), (r1 * sin(737 * M_PI / 560.0))};
       g_128apsk[121] = (FComplex){(r6 * cos(6829 * M_PI / 5040.0)), (r6 * sin(6829 * M_PI / 5040.0))};
       g_128apsk[122] = (FComplex){(r6 * cos(229 * M_PI / 180.0)), (r6 * sin(229 * M_PI / 180.0))};
       g_128apsk[123] = (FComplex){(r6 * cos(221 * M_PI / 168.0)), (r6 * sin(221 * M_PI / 168.0))};
       g_128apsk[124] = (FComplex){(r2 * cos(727 * M_PI / 560.0)), (r2 * sin(727 * M_PI / 560.0))};
       g_128apsk[125] = (FComplex){(r3 * cos(959 * M_PI / 720.0)), (r3 * sin(959 * M_PI / 720.0))};
       g_128apsk[126] = (FComplex){(r5 * cos(919 * M_PI / 720.0)), (r5 * sin(919 * M_PI / 720.0))};
       g_128apsk[127] = (FComplex){(r4 * cos(1121 * M_PI / 840.0)), (r4 * sin(1121 * M_PI / 840.0))};
       demap_update_constellation(g_128apsk, 128);
       break;
     case m_256APSK:
       if (g_format.code_rate == cR_20_30) {
         g_256apsk[0] = (FComplex){1.6350, 0.1593};
         g_256apsk[1] = (FComplex){1.5776, 0.4735};
         g_256apsk[2] = (FComplex){0.9430, 0.1100};
         g_256apsk[3] = (FComplex){0.9069, 0.2829};
         g_256apsk[4] = (FComplex){0.3237, 0.0849};
         g_256apsk[5] = (FComplex){0.3228, 0.0867};
         g_256apsk[6] = (FComplex){0.7502, 0.1138};
         g_256apsk[7] = (FComplex){0.7325, 0.2088};
         g_256apsk[8] = (FComplex){0.1658, 1.6747};
         g_256apsk[9] = (FComplex){0.4907, 1.6084};
         g_256apsk[10] = (FComplex){0.1088, 0.9530};
         g_256apsk[11] = (FComplex){0.2464, 0.9270};
         g_256apsk[12] = (FComplex){0.0872, 0.1390};
         g_256apsk[13] = (FComplex){0.0871, 0.1392};
         g_256apsk[14] = (FComplex){0.1091, 0.7656};
         g_256apsk[15] = (FComplex){0.1699, 0.7537};
         g_256apsk[16] = (FComplex){-1.6350, 0.1593};
         g_256apsk[17] = (FComplex){-1.5776, 0.4735};
         g_256apsk[18] = (FComplex){-0.9430, 0.1100};
         g_256apsk[19] = (FComplex){-0.9069, 0.2829};
         g_256apsk[20] = (FComplex){-0.3237, 0.0849};
         g_256apsk[21] = (FComplex){-0.3228, 0.0867};
         g_256apsk[22] = (FComplex){-0.7502, 0.1138};
         g_256apsk[23] = (FComplex){-0.7325, 0.2088};
         g_256apsk[24] = (FComplex){-0.1658, 1.6747};
         g_256apsk[25] = (FComplex){-0.4907, 1.6084};
         g_256apsk[26] = (FComplex){-0.1088, 0.9530};
         g_256apsk[27] = (FComplex){-0.2464, 0.9270};
         g_256apsk[28] = (FComplex){-0.0872, 0.1390};
         g_256apsk[29] = (FComplex){-0.0871, 0.1392};
         g_256apsk[30] = (FComplex){-0.1091, 0.7656};
         g_256apsk[31] = (FComplex){-0.1699, 0.7537};
         g_256apsk[32] = (FComplex){1.3225, 0.1320};
         g_256apsk[33] = (FComplex){1.2742, 0.3922};
         g_256apsk[34] = (FComplex){1.0854, 0.1139};
         g_256apsk[35] = (FComplex){1.0441, 0.3296};
         g_256apsk[36] = (FComplex){0.4582, 0.1123};
         g_256apsk[37] = (FComplex){0.4545, 0.1251};
         g_256apsk[38] = (FComplex){0.6473, 0.1138};
         g_256apsk[39] = (FComplex){0.6339, 0.1702};
         g_256apsk[40] = (FComplex){0.1322, 1.3631};
         g_256apsk[41] = (FComplex){0.3929, 1.3102};
         g_256apsk[42] = (FComplex){0.1124, 1.1327};
         g_256apsk[43] = (FComplex){0.3160, 1.0913};
         g_256apsk[44] = (FComplex){0.0928, 0.3970};
         g_256apsk[45] = (FComplex){0.0937, 0.3973};
         g_256apsk[46] = (FComplex){0.1054, 0.5979};
         g_256apsk[47] = (FComplex){0.1230, 0.5949};
         g_256apsk[48] = (FComplex){-1.3225, 0.1320};
         g_256apsk[49] = (FComplex){-1.2742, 0.3922};
         g_256apsk[50] = (FComplex){-1.0854, 0.1139};
         g_256apsk[51] = (FComplex){-1.0441, 0.3296};
         g_256apsk[52] = (FComplex){-0.4582, 0.1123};
         g_256apsk[53] = (FComplex){-0.4545, 0.1251};
         g_256apsk[54] = (FComplex){-0.6473, 0.1138};
         g_256apsk[55] = (FComplex){-0.6339, 0.1702};
         g_256apsk[56] = (FComplex){-0.1322, 1.3631};
         g_256apsk[57] = (FComplex){-0.3929, 1.3102};
         g_256apsk[58] = (FComplex){-0.1124, 1.1327};
         g_256apsk[59] = (FComplex){-0.3160, 1.0913};
         g_256apsk[60] = (FComplex){-0.0928, 0.3970};
         g_256apsk[61] = (FComplex){-0.0937, 0.3973};
         g_256apsk[62] = (FComplex){-0.1054, 0.5979};
         g_256apsk[63] = (FComplex){-0.1230, 0.5949};
         g_256apsk[64] = (FComplex){1.6350, -0.1593};
         g_256apsk[65] = (FComplex){1.5776, -0.4735};
         g_256apsk[66] = (FComplex){0.9430, -0.1100};
         g_256apsk[67] = (FComplex){0.9069, -0.2829};
         g_256apsk[68] = (FComplex){0.3237, -0.0849};
         g_256apsk[69] = (FComplex){0.3228, -0.0867};
         g_256apsk[70] = (FComplex){0.7502, -0.1138};
         g_256apsk[71] = (FComplex){0.7325, -0.2088};
         g_256apsk[72] = (FComplex){0.1658, -1.6747};
         g_256apsk[73] = (FComplex){0.4907, -1.6084};
         g_256apsk[74] = (FComplex){0.1088, -0.9530};
         g_256apsk[75] = (FComplex){0.2464, -0.9270};
         g_256apsk[76] = (FComplex){0.0872, -0.1390};
         g_256apsk[77] = (FComplex){0.0871, -0.1392};
         g_256apsk[78] = (FComplex){0.1091, -0.7656};
         g_256apsk[79] = (FComplex){0.1699, -0.7537};
         g_256apsk[80] = (FComplex){-1.6350, -0.1593};
         g_256apsk[81] = (FComplex){-1.5776, -0.4735};
         g_256apsk[82] = (FComplex){-0.9430, -0.1100};
         g_256apsk[83] = (FComplex){-0.9069, -0.2829};
         g_256apsk[84] = (FComplex){-0.3237, -0.0849};
         g_256apsk[85] = (FComplex){-0.3228, -0.0867};
         g_256apsk[86] = (FComplex){-0.7502, -0.1138};
         g_256apsk[87] = (FComplex){-0.7325, -0.2088};
         g_256apsk[88] = (FComplex){-0.1658, -1.6747};
         g_256apsk[89] = (FComplex){-0.4907, -1.6084};
         g_256apsk[90] = (FComplex){-0.1088, -0.9530};
         g_256apsk[91] = (FComplex){-0.2464, -0.9270};
         g_256apsk[92] = (FComplex){-0.0872, -0.1390};
         g_256apsk[93] = (FComplex){-0.0871, -0.1392};
         g_256apsk[94] = (FComplex){-0.1091, -0.7656};
         g_256apsk[95] = (FComplex){-0.1699, -0.7537};
         g_256apsk[96] = (FComplex){1.3225, -0.1320};
         g_256apsk[97] = (FComplex){1.2742, -0.3922};
         g_256apsk[98] = (FComplex){1.0854, -0.1139};
         g_256apsk[99] = (FComplex){1.0441, -0.3296};
         g_256apsk[100] = (FComplex){0.4582, -0.1123};
         g_256apsk[101] = (FComplex){0.4545, -0.1251};
         g_256apsk[102] = (FComplex){0.6473, -0.1138};
         g_256apsk[103] = (FComplex){0.6339, -0.1702};
         g_256apsk[104] = (FComplex){0.1322, -1.3631};
         g_256apsk[105] = (FComplex){0.3929, -1.3102};
         g_256apsk[106] = (FComplex){0.1124, -1.1327};
         g_256apsk[107] = (FComplex){0.3160, -1.0913};
         g_256apsk[108] = (FComplex){0.0928, -0.3970};
         g_256apsk[109] = (FComplex){0.0937, -0.3973};
         g_256apsk[110] = (FComplex){0.1054, -0.5979};
         g_256apsk[111] = (FComplex){0.1230, -0.5949};
         g_256apsk[112] = (FComplex){-1.3225, -0.1320};
         g_256apsk[113] = (FComplex){-1.2742, -0.3922};
         g_256apsk[114] = (FComplex){-1.0854, -0.1139};
         g_256apsk[115] = (FComplex){-1.0441, -0.3296};
         g_256apsk[116] = (FComplex){-0.4582, -0.1123};
         g_256apsk[117] = (FComplex){-0.4545, -0.1251};
         g_256apsk[118] = (FComplex){-0.6473, -0.1138};
         g_256apsk[119] = (FComplex){-0.6339, -0.1702};
         g_256apsk[120] = (FComplex){-0.1322, -1.3631};
         g_256apsk[121] = (FComplex){-0.3929, -1.3102};
         g_256apsk[122] = (FComplex){-0.1124, -1.1327};
         g_256apsk[123] = (FComplex){-0.3160, -1.0913};
         g_256apsk[124] = (FComplex){-0.0928, -0.3970};
         g_256apsk[125] = (FComplex){-0.0937, -0.3973};
         g_256apsk[126] = (FComplex){-0.1054, -0.5979};
         g_256apsk[127] = (FComplex){-0.1230, -0.5949};
         g_256apsk[128] = (FComplex){1.2901, 1.0495};
         g_256apsk[129] = (FComplex){1.4625, 0.7740};
         g_256apsk[130] = (FComplex){0.7273, 0.6160};
         g_256apsk[131] = (FComplex){0.8177, 0.4841};
         g_256apsk[132] = (FComplex){0.2844, 0.1296};
         g_256apsk[133] = (FComplex){0.2853, 0.1309};
         g_256apsk[134] = (FComplex){0.5902, 0.4857};
         g_256apsk[135] = (FComplex){0.6355, 0.4185};
         g_256apsk[136] = (FComplex){1.0646, 1.2876};
         g_256apsk[137] = (FComplex){0.7949, 1.4772};
         g_256apsk[138] = (FComplex){0.5707, 0.7662};
         g_256apsk[139] = (FComplex){0.4490, 0.8461};
         g_256apsk[140] = (FComplex){0.1053, 0.1494};
         g_256apsk[141] = (FComplex){0.1052, 0.1495};
         g_256apsk[142] = (FComplex){0.4294, 0.6363};
         g_256apsk[143] = (FComplex){0.3744, 0.6744};
         g_256apsk[144] = (FComplex){-1.2901, 1.0495};
         g_256apsk[145] = (FComplex){-1.4625, 0.7740};
         g_256apsk[146] = (FComplex){-0.7273, 0.6160};
         g_256apsk[147] = (FComplex){-0.8177, 0.4841};
         g_256apsk[148] = (FComplex){-0.2844, 0.1296};
         g_256apsk[149] = (FComplex){-0.2853, 0.1309};
         g_256apsk[150] = (FComplex){-0.5902, 0.4857};
         g_256apsk[151] = (FComplex){-0.6355, 0.4185};
         g_256apsk[152] = (FComplex){-1.0646, 1.2876};
         g_256apsk[153] = (FComplex){-0.7949, 1.4772};
         g_256apsk[154] = (FComplex){-0.5707, 0.7662};
         g_256apsk[155] = (FComplex){-0.4490, 0.8461};
         g_256apsk[156] = (FComplex){-0.1053, 0.1494};
         g_256apsk[157] = (FComplex){-0.1052, 0.1495};
         g_256apsk[158] = (FComplex){-0.4294, 0.6363};
         g_256apsk[159] = (FComplex){-0.3744, 0.6744};
         g_256apsk[160] = (FComplex){1.0382, 0.8623};
         g_256apsk[161] = (FComplex){1.1794, 0.6376};
         g_256apsk[162] = (FComplex){0.8504, 0.7217};
         g_256apsk[163] = (FComplex){0.9638, 0.5407};
         g_256apsk[164] = (FComplex){0.3734, 0.2560};
         g_256apsk[165] = (FComplex){0.3799, 0.2517};
         g_256apsk[166] = (FComplex){0.4968, 0.3947};
         g_256apsk[167] = (FComplex){0.5231, 0.3644};
         g_256apsk[168] = (FComplex){0.8555, 1.0542};
         g_256apsk[169] = (FComplex){0.6363, 1.2064};
         g_256apsk[170] = (FComplex){0.6961, 0.8850};
         g_256apsk[171] = (FComplex){0.5229, 1.0037};
         g_256apsk[172] = (FComplex){0.1938, 0.3621};
         g_256apsk[173] = (FComplex){0.1909, 0.3627};
         g_256apsk[174] = (FComplex){0.3224, 0.5236};
         g_256apsk[175] = (FComplex){0.3016, 0.5347};
         g_256apsk[176] = (FComplex){-1.0382, 0.8623};
         g_256apsk[177] = (FComplex){-1.1794, 0.6376};
         g_256apsk[178] = (FComplex){-0.8504, 0.7217};
         g_256apsk[179] = (FComplex){-0.9638, 0.5407};
         g_256apsk[180] = (FComplex){-0.3734, 0.2560};
         g_256apsk[181] = (FComplex){-0.3799, 0.2517};
         g_256apsk[182] = (FComplex){-0.4968, 0.3947};
         g_256apsk[183] = (FComplex){-0.5231, 0.3644};
         g_256apsk[184] = (FComplex){-0.8555, 1.0542};
         g_256apsk[185] = (FComplex){-0.6363, 1.2064};
         g_256apsk[186] = (FComplex){-0.6961, 0.8850};
         g_256apsk[187] = (FComplex){-0.5229, 1.0037};
         g_256apsk[188] = (FComplex){-0.1938, 0.3621};
         g_256apsk[189] = (FComplex){-0.1909, 0.3627};
         g_256apsk[190] = (FComplex){-0.3224, 0.5236};
         g_256apsk[191] = (FComplex){-0.3016, 0.5347};
         g_256apsk[192] = (FComplex){1.2901, -1.0495};
         g_256apsk[193] = (FComplex){1.4625, -0.7740};
         g_256apsk[194] = (FComplex){0.7273, -0.6160};
         g_256apsk[195] = (FComplex){0.8177, -0.4841};
         g_256apsk[196] = (FComplex){0.2844, -0.1296};
         g_256apsk[197] = (FComplex){0.2853, -0.1309};
         g_256apsk[198] = (FComplex){0.5902, -0.4857};
         g_256apsk[199] = (FComplex){0.6355, -0.4185};
         g_256apsk[200] = (FComplex){1.0646, -1.2876};
         g_256apsk[201] = (FComplex){0.7949, -1.4772};
         g_256apsk[202] = (FComplex){0.5707, -0.7662};
         g_256apsk[203] = (FComplex){0.4490, -0.8461};
         g_256apsk[204] = (FComplex){0.1053, -0.1494};
         g_256apsk[205] = (FComplex){0.1052, -0.1495};
         g_256apsk[206] = (FComplex){0.4294, -0.6363};
         g_256apsk[207] = (FComplex){0.3744, -0.6744};
         g_256apsk[208] = (FComplex){-1.2901, -1.0495};
         g_256apsk[209] = (FComplex){-1.4625, -0.7740};
         g_256apsk[210] = (FComplex){-0.7273, -0.6160};
         g_256apsk[211] = (FComplex){-0.8177, -0.4841};
         g_256apsk[212] = (FComplex){-0.2844, -0.1296};
         g_256apsk[213] = (FComplex){-0.2853, -0.1309};
         g_256apsk[214] = (FComplex){-0.5902, -0.4857};
         g_256apsk[215] = (FComplex){-0.6355, -0.4185};
         g_256apsk[216] = (FComplex){-1.0646, -1.2876};
         g_256apsk[217] = (FComplex){-0.7949, -1.4772};
         g_256apsk[218] = (FComplex){-0.5707, -0.7662};
         g_256apsk[219] = (FComplex){-0.4490, -0.8461};
         g_256apsk[220] = (FComplex){-0.1053, -0.1494};
         g_256apsk[221] = (FComplex){-0.1052, -0.1495};
         g_256apsk[222] = (FComplex){-0.4294, -0.6363};
         g_256apsk[223] = (FComplex){-0.3744, -0.6744};
         g_256apsk[224] = (FComplex){1.0382, -0.8623};
         g_256apsk[225] = (FComplex){1.1794, -0.6376};
         g_256apsk[226] = (FComplex){0.8504, -0.7217};
         g_256apsk[227] = (FComplex){0.9638, -0.5407};
         g_256apsk[228] = (FComplex){0.3734, -0.2560};
         g_256apsk[229] = (FComplex){0.3799, -0.2517};
         g_256apsk[230] = (FComplex){0.4968, -0.3947};
         g_256apsk[231] = (FComplex){0.5231, -0.3644};
         g_256apsk[232] = (FComplex){0.8555, -1.0542};
         g_256apsk[233] = (FComplex){0.6363, -1.2064};
         g_256apsk[234] = (FComplex){0.6961, -0.8850};
         g_256apsk[235] = (FComplex){0.5229, -1.0037};
         g_256apsk[236] = (FComplex){0.1938, -0.3621};
         g_256apsk[237] = (FComplex){0.1909, -0.3627};
         g_256apsk[238] = (FComplex){0.3224, -0.5236};
         g_256apsk[239] = (FComplex){0.3016, -0.5347};
         g_256apsk[240] = (FComplex){-1.0382, -0.8623};
         g_256apsk[241] = (FComplex){-1.1794, -0.6376};
         g_256apsk[242] = (FComplex){-0.8504, -0.7217};
         g_256apsk[243] = (FComplex){-0.9638, -0.5407};
         g_256apsk[244] = (FComplex){-0.3734, -0.2560};
         g_256apsk[245] = (FComplex){-0.3799, -0.2517};
         g_256apsk[246] = (FComplex){-0.4968, -0.3947};
         g_256apsk[247] = (FComplex){-0.5231, -0.3644};
         g_256apsk[248] = (FComplex){-0.8555, -1.0542};
         g_256apsk[249] = (FComplex){-0.6363, -1.2064};
         g_256apsk[250] = (FComplex){-0.6961, -0.8850};
         g_256apsk[251] = (FComplex){-0.5229, -1.0037};
         g_256apsk[252] = (FComplex){-0.1938, -0.3621};
         g_256apsk[253] = (FComplex){-0.1909, -0.3627};
         g_256apsk[254] = (FComplex){-0.3224, -0.5236};
         g_256apsk[255] = (FComplex){-0.3016, -0.5347};
         demap_update_constellation(g_256apsk, 256);
       }
       else if (g_format.code_rate == cR_22_30) {
         g_256apsk[0] = (FComplex){1.5977, 0.1526};
         g_256apsk[1] = (FComplex){1.3187, 0.1269};
         g_256apsk[2] = (FComplex){-1.5977, 0.1526};
         g_256apsk[3] = (FComplex){-1.3187, 0.1269};
         g_256apsk[4] = (FComplex){0.2574, 0.0733};
         g_256apsk[5] = (FComplex){0.4496, 0.0807};
         g_256apsk[6] = (FComplex){-0.2574, 0.0733};
         g_256apsk[7] = (FComplex){-0.4496, 0.0807};
         g_256apsk[8] = (FComplex){1.5977, -0.1526};
         g_256apsk[9] = (FComplex){1.3187, -0.1269};
         g_256apsk[10] = (FComplex){-1.5977, -0.1526};
         g_256apsk[11] = (FComplex){-1.3187, -0.1269};
         g_256apsk[12] = (FComplex){0.2574, -0.0733};
         g_256apsk[13] = (FComplex){0.4496, -0.0807};
         g_256apsk[14] = (FComplex){-0.2574, -0.0733};
         g_256apsk[15] = (FComplex){-0.4496, -0.0807};
         g_256apsk[16] = (FComplex){0.9269, 0.0943};
         g_256apsk[17] = (FComplex){1.1024, 0.1086};
         g_256apsk[18] = (FComplex){-0.9269, 0.0943};
         g_256apsk[19] = (FComplex){-1.1024, 0.1086};
         g_256apsk[20] = (FComplex){0.7663, 0.0867};
         g_256apsk[21] = (FComplex){0.6115, 0.0871};
         g_256apsk[22] = (FComplex){-0.7663, 0.0867};
         g_256apsk[23] = (FComplex){-0.6115, 0.0871};
         g_256apsk[24] = (FComplex){0.9269, -0.0943};
         g_256apsk[25] = (FComplex){1.1024, -0.1086};
         g_256apsk[26] = (FComplex){-0.9269, -0.0943};
         g_256apsk[27] = (FComplex){-1.1024, -0.1086};
         g_256apsk[28] = (FComplex){0.7663, -0.0867};
         g_256apsk[29] = (FComplex){0.6115, -0.0871};
         g_256apsk[30] = (FComplex){-0.7663, -0.0867};
         g_256apsk[31] = (FComplex){-0.6115, -0.0871};
         g_256apsk[32] = (FComplex){1.2701, 1.0139};
         g_256apsk[33] = (FComplex){1.0525, 0.8406};
         g_256apsk[34] = (FComplex){-1.2701, 1.0139};
         g_256apsk[35] = (FComplex){-1.0525, 0.8406};
         g_256apsk[36] = (FComplex){0.2487, 0.1978};
         g_256apsk[37] = (FComplex){0.3523, 0.2915};
         g_256apsk[38] = (FComplex){-0.2487, 0.1978};
         g_256apsk[39] = (FComplex){-0.3523, 0.2915};
         g_256apsk[40] = (FComplex){1.2701, -1.0139};
         g_256apsk[41] = (FComplex){1.0525, -0.8406};
         g_256apsk[42] = (FComplex){-1.2701, -1.0139};
         g_256apsk[43] = (FComplex){-1.0525, -0.8406};
         g_256apsk[44] = (FComplex){0.2487, -0.1978};
         g_256apsk[45] = (FComplex){0.3523, -0.2915};
         g_256apsk[46] = (FComplex){-0.2487, -0.1978};
         g_256apsk[47] = (FComplex){-0.3523, -0.2915};
         g_256apsk[48] = (FComplex){0.7359, 0.6043};
         g_256apsk[49] = (FComplex){0.8807, 0.7105};
         g_256apsk[50] = (FComplex){-0.7359, 0.6043};
         g_256apsk[51] = (FComplex){-0.8807, 0.7105};
         g_256apsk[52] = (FComplex){0.6017, 0.5019};
         g_256apsk[53] = (FComplex){0.4747, 0.3996};
         g_256apsk[54] = (FComplex){-0.6017, 0.5019};
         g_256apsk[55] = (FComplex){-0.4747, 0.3996};
         g_256apsk[56] = (FComplex){0.7359, -0.6043};
         g_256apsk[57] = (FComplex){0.8807, -0.7105};
         g_256apsk[58] = (FComplex){-0.7359, -0.6043};
         g_256apsk[59] = (FComplex){-0.8807, -0.7105};
         g_256apsk[60] = (FComplex){0.6017, -0.5019};
         g_256apsk[61] = (FComplex){0.4747, -0.3996};
         g_256apsk[62] = (FComplex){-0.6017, -0.5019};
         g_256apsk[63] = (FComplex){-0.4747, -0.3996};
         g_256apsk[64] = (FComplex){1.5441, 0.4545};
         g_256apsk[65] = (FComplex){1.2750, 0.3775};
         g_256apsk[66] = (FComplex){-1.5441, 0.4545};
         g_256apsk[67] = (FComplex){-1.2750, 0.3775};
         g_256apsk[68] = (FComplex){0.2586, 0.0752};
         g_256apsk[69] = (FComplex){0.4435, 0.1065};
         g_256apsk[70] = (FComplex){-0.2586, 0.0752};
         g_256apsk[71] = (FComplex){-0.4435, 0.1065};
         g_256apsk[72] = (FComplex){1.5441, -0.4545};
         g_256apsk[73] = (FComplex){1.2750, -0.3775};
         g_256apsk[74] = (FComplex){-1.5441, -0.4545};
         g_256apsk[75] = (FComplex){-1.2750, -0.3775};
         g_256apsk[76] = (FComplex){0.2586, -0.0752};
         g_256apsk[77] = (FComplex){0.4435, -0.1065};
         g_256apsk[78] = (FComplex){-0.2586, -0.0752};
         g_256apsk[79] = (FComplex){-0.4435, -0.1065};
         g_256apsk[80] = (FComplex){0.8925, 0.2771};
         g_256apsk[81] = (FComplex){1.0649, 0.3219};
         g_256apsk[82] = (FComplex){-0.8925, 0.2771};
         g_256apsk[83] = (FComplex){-1.0649, 0.3219};
         g_256apsk[84] = (FComplex){0.7362, 0.2279};
         g_256apsk[85] = (FComplex){0.5936, 0.1699};
         g_256apsk[86] = (FComplex){-0.7362, 0.2279};
         g_256apsk[87] = (FComplex){-0.5936, 0.1699};
         g_256apsk[88] = (FComplex){0.8925, -0.2771};
         g_256apsk[89] = (FComplex){1.0649, -0.3219};
         g_256apsk[90] = (FComplex){-0.8925, -0.2771};
         g_256apsk[91] = (FComplex){-1.0649, -0.3219};
         g_256apsk[92] = (FComplex){0.7362, -0.2279};
         g_256apsk[93] = (FComplex){0.5936, -0.1699};
         g_256apsk[94] = (FComplex){-0.7362, -0.2279};
         g_256apsk[95] = (FComplex){-0.5936, -0.1699};
         g_256apsk[96] = (FComplex){1.4352, 0.7452};
         g_256apsk[97] = (FComplex){1.1866, 0.6182};
         g_256apsk[98] = (FComplex){-1.4352, 0.7452};
         g_256apsk[99] = (FComplex){-1.1866, 0.6182};
         g_256apsk[100] = (FComplex){0.2523, 0.1944};
         g_256apsk[101] = (FComplex){0.3695, 0.2695};
         g_256apsk[102] = (FComplex){-0.2523, 0.1944};
         g_256apsk[103] = (FComplex){-0.3695, 0.2695};
         g_256apsk[104] = (FComplex){1.4352, -0.7452};
         g_256apsk[105] = (FComplex){1.1866, -0.6182};
         g_256apsk[106] = (FComplex){-1.4352, -0.7452};
         g_256apsk[107] = (FComplex){-1.1866, -0.6182};
         g_256apsk[108] = (FComplex){0.2523, -0.1944};
         g_256apsk[109] = (FComplex){0.3695, -0.2695};
         g_256apsk[110] = (FComplex){-0.2523, -0.1944};
         g_256apsk[111] = (FComplex){-0.3695, -0.2695};
         g_256apsk[112] = (FComplex){0.8273, 0.4493};
         g_256apsk[113] = (FComplex){0.9911, 0.5243};
         g_256apsk[114] = (FComplex){-0.8273, 0.4493};
         g_256apsk[115] = (FComplex){-0.9911, 0.5243};
         g_256apsk[116] = (FComplex){0.6708, 0.3859};
         g_256apsk[117] = (FComplex){0.5197, 0.3331};
         g_256apsk[118] = (FComplex){-0.6708, 0.3859};
         g_256apsk[119] = (FComplex){-0.5197, 0.3331};
         g_256apsk[120] = (FComplex){0.8273, -0.4493};
         g_256apsk[121] = (FComplex){0.9911, -0.5243};
         g_256apsk[122] = (FComplex){-0.8273, -0.4493};
         g_256apsk[123] = (FComplex){-0.9911, -0.5243};
         g_256apsk[124] = (FComplex){0.6708, -0.3859};
         g_256apsk[125] = (FComplex){0.5197, -0.3331};
         g_256apsk[126] = (FComplex){-0.6708, -0.3859};
         g_256apsk[127] = (FComplex){-0.5197, -0.3331};
         g_256apsk[128] = (FComplex){0.1646, 1.6329};
         g_256apsk[129] = (FComplex){0.1379, 1.3595};
         g_256apsk[130] = (FComplex){-0.1646, 1.6329};
         g_256apsk[131] = (FComplex){-0.1379, 1.3595};
         g_256apsk[132] = (FComplex){0.0736, 0.0898};
         g_256apsk[133] = (FComplex){0.0742, 0.5054};
         g_256apsk[134] = (FComplex){-0.0736, 0.0898};
         g_256apsk[135] = (FComplex){-0.0742, 0.5054};
         g_256apsk[136] = (FComplex){0.1646, -1.6329};
         g_256apsk[137] = (FComplex){0.1379, -1.3595};
         g_256apsk[138] = (FComplex){-0.1646, -1.6329};
         g_256apsk[139] = (FComplex){-0.1379, -1.3595};
         g_256apsk[140] = (FComplex){0.0736, -0.0898};
         g_256apsk[141] = (FComplex){0.0742, -0.5054};
         g_256apsk[142] = (FComplex){-0.0736, -0.0898};
         g_256apsk[143] = (FComplex){-0.0742, -0.5054};
         g_256apsk[144] = (FComplex){0.0992, 0.9847};
         g_256apsk[145] = (FComplex){0.1170, 1.1517};
         g_256apsk[146] = (FComplex){-0.0992, 0.9847};
         g_256apsk[147] = (FComplex){-0.1170, 1.1517};
         g_256apsk[148] = (FComplex){0.0894, 0.8287};
         g_256apsk[149] = (FComplex){0.0889, 0.6739};
         g_256apsk[150] = (FComplex){-0.0894, 0.8287};
         g_256apsk[151] = (FComplex){-0.0889, 0.6739};
         g_256apsk[152] = (FComplex){0.0992, -0.9847};
         g_256apsk[153] = (FComplex){0.1170, -1.1517};
         g_256apsk[154] = (FComplex){-0.0992, -0.9847};
         g_256apsk[155] = (FComplex){-0.1170, -1.1517};
         g_256apsk[156] = (FComplex){0.0894, -0.8287};
         g_256apsk[157] = (FComplex){0.0889, -0.6739};
         g_256apsk[158] = (FComplex){-0.0894, -0.8287};
         g_256apsk[159] = (FComplex){-0.0889, -0.6739};
         g_256apsk[160] = (FComplex){1.0516, 1.2481};
         g_256apsk[161] = (FComplex){0.8742, 1.0355};
         g_256apsk[162] = (FComplex){-1.0516, 1.2481};
         g_256apsk[163] = (FComplex){-0.8742, 1.0355};
         g_256apsk[164] = (FComplex){0.0970, 0.2450};
         g_256apsk[165] = (FComplex){0.1959, 0.4045};
         g_256apsk[166] = (FComplex){-0.0970, 0.2450};
         g_256apsk[167] = (FComplex){-0.1959, 0.4045};
         g_256apsk[168] = (FComplex){1.0516, -1.2481};
         g_256apsk[169] = (FComplex){0.8742, -1.0355};
         g_256apsk[170] = (FComplex){-1.0516, -1.2481};
         g_256apsk[171] = (FComplex){-0.8742, -1.0355};
         g_256apsk[172] = (FComplex){0.0970, -0.2450};
         g_256apsk[173] = (FComplex){0.1959, -0.4045};
         g_256apsk[174] = (FComplex){-0.0970, -0.2450};
         g_256apsk[175] = (FComplex){-0.1959, -0.4045};
         g_256apsk[176] = (FComplex){0.6150, 0.7441};
         g_256apsk[177] = (FComplex){0.7345, 0.8743};
         g_256apsk[178] = (FComplex){-0.6150, 0.7441};
         g_256apsk[179] = (FComplex){-0.7345, 0.8743};
         g_256apsk[180] = (FComplex){0.4932, 0.6301};
         g_256apsk[181] = (FComplex){0.3620, 0.5258};
         g_256apsk[182] = (FComplex){-0.4932, 0.6301};
         g_256apsk[183] = (FComplex){-0.3620, 0.5258};
         g_256apsk[184] = (FComplex){0.6150, -0.7441};
         g_256apsk[185] = (FComplex){0.7345, -0.8743};
         g_256apsk[186] = (FComplex){-0.6150, -0.7441};
         g_256apsk[187] = (FComplex){-0.7345, -0.8743};
         g_256apsk[188] = (FComplex){0.4932, -0.6301};
         g_256apsk[189] = (FComplex){0.3620, -0.5258};
         g_256apsk[190] = (FComplex){-0.4932, -0.6301};
         g_256apsk[191] = (FComplex){-0.3620, -0.5258};
         g_256apsk[192] = (FComplex){0.4866, 1.5660};
         g_256apsk[193] = (FComplex){0.4068, 1.3027};
         g_256apsk[194] = (FComplex){-0.4866, 1.5660};
         g_256apsk[195] = (FComplex){-0.4068, 1.3027};
         g_256apsk[196] = (FComplex){0.0732, 0.0899};
         g_256apsk[197] = (FComplex){0.0877, 0.4997};
         g_256apsk[198] = (FComplex){-0.0732, 0.0899};
         g_256apsk[199] = (FComplex){-0.0877, 0.4997};
         g_256apsk[200] = (FComplex){0.4866, -1.5660};
         g_256apsk[201] = (FComplex){0.4068, -1.3027};
         g_256apsk[202] = (FComplex){-0.4866, -1.5660};
         g_256apsk[203] = (FComplex){-0.4068, -1.3027};
         g_256apsk[204] = (FComplex){0.0732, -0.0899};
         g_256apsk[205] = (FComplex){0.0877, -0.4997};
         g_256apsk[206] = (FComplex){-0.0732, -0.0899};
         g_256apsk[207] = (FComplex){-0.0877, -0.4997};
         g_256apsk[208] = (FComplex){0.2927, 0.9409};
         g_256apsk[209] = (FComplex){0.3446, 1.1023};
         g_256apsk[210] = (FComplex){-0.2927, 0.9409};
         g_256apsk[211] = (FComplex){-0.3446, 1.1023};
         g_256apsk[212] = (FComplex){0.2350, 0.7945};
         g_256apsk[213] = (FComplex){0.1670, 0.6529};
         g_256apsk[214] = (FComplex){-0.2350, 0.7945};
         g_256apsk[215] = (FComplex){-0.1670, 0.6529};
         g_256apsk[216] = (FComplex){0.2927, -0.9409};
         g_256apsk[217] = (FComplex){0.3446, -1.1023};
         g_256apsk[218] = (FComplex){-0.2927, -0.9409};
         g_256apsk[219] = (FComplex){-0.3446, -1.1023};
         g_256apsk[220] = (FComplex){0.2350, -0.7945};
         g_256apsk[221] = (FComplex){0.1670, -0.6529};
         g_256apsk[222] = (FComplex){-0.2350, -0.7945};
         g_256apsk[223] = (FComplex){-0.1670, -0.6529};
         g_256apsk[224] = (FComplex){0.7867, 1.4356};
         g_256apsk[225] = (FComplex){0.6561, 1.1927};
         g_256apsk[226] = (FComplex){-0.7867, 1.4356};
         g_256apsk[227] = (FComplex){-0.6561, 1.1927};
         g_256apsk[228] = (FComplex){0.0947, 0.2451};
         g_256apsk[229] = (FComplex){0.1865, 0.4121};
         g_256apsk[230] = (FComplex){-0.0947, 0.2451};
         g_256apsk[231] = (FComplex){-0.1865, 0.4121};
         g_256apsk[232] = (FComplex){0.7867, -1.4356};
         g_256apsk[233] = (FComplex){0.6561, -1.1927};
         g_256apsk[234] = (FComplex){-0.7867, -1.4356};
         g_256apsk[235] = (FComplex){-0.6561, -1.1927};
         g_256apsk[236] = (FComplex){0.0947, -0.2451};
         g_256apsk[237] = (FComplex){0.1865, -0.4121};
         g_256apsk[238] = (FComplex){-0.0947, -0.2451};
         g_256apsk[239] = (FComplex){-0.1865, -0.4121};
         g_256apsk[240] = (FComplex){0.4677, 0.8579};
         g_256apsk[241] = (FComplex){0.5537, 1.0081};
         g_256apsk[242] = (FComplex){-0.4677, 0.8579};
         g_256apsk[243] = (FComplex){-0.5537, 1.0081};
         g_256apsk[244] = (FComplex){0.3893, 0.7143};
         g_256apsk[245] = (FComplex){0.3110, 0.5686};
         g_256apsk[246] = (FComplex){-0.3893, 0.7143};
         g_256apsk[247] = (FComplex){-0.3110, 0.5686};
         g_256apsk[248] = (FComplex){0.4677, -0.8579};
         g_256apsk[249] = (FComplex){0.5537, -1.0081};
         g_256apsk[250] = (FComplex){-0.4677, -0.8579};
         g_256apsk[251] = (FComplex){-0.5537, -1.0081};
         g_256apsk[252] = (FComplex){0.3893, -0.7143};
         g_256apsk[253] = (FComplex){0.3110, -0.5686};
         g_256apsk[254] = (FComplex){-0.3893, -0.7143};
         g_256apsk[255] = (FComplex){-0.3110, -0.5686};
         demap_update_constellation(g_256apsk, 256);
       }
       else {
         r8 = m;
         switch(g_format.code_rate) {
           case cR_116_180:
           case cR_124_180:
             r1 = r8 / 6.536;
             r7 = r1 * 5.078;
             r6 = r1 * 4.235;
             r5 = r1 * 3.569;
             r4 = r1 * 2.98;
             r3 = r1 * 2.405;
             r2 = r1 * 1.791;
             break;
           case cR_128_180:
             r1 = r8 / 5.4;
             r7 = r1 * 4.6;
             r6 = r1 * 4.045;
             r5 = r1 * 3.579;
             r4 = r1 * 2.986;
             r3 = r1 * 2.409;
             r2 = r1 * 1.794;
             break;
           case cR_135_180:
             r1 = r8 / 5.2;
             r7 = r1 * 4.5;
             r6 = r1 * 4.045;
             r5 = r1 * 3.579;
             r4 = r1 * 2.986;
             r3 = r1 * 2.409;
             r2 = r1 * 1.794;
             break;
           default:
             r1 = 0;
             r2 = 0;
             r3 = 0;
             r4 = 0;
             r5 = 0;
             r6 = 0;
             r7 = 0;
             break;
         }
         g_256apsk[0] = (FComplex){(r1 * cos(M_PI / 32.0)), (r1 * sin(M_PI / 32.0))};
         g_256apsk[1] = (FComplex){(r1 * cos(3 * M_PI / 32.0)), (r1 * sin(3 * M_PI / 32.0))};
         g_256apsk[2] = (FComplex){(r1 * cos(7 * M_PI / 32.0)), (r1 * sin(7 * M_PI / 32.0))};
         g_256apsk[3] = (FComplex){(r1 * cos(5 * M_PI / 32.0)), (r1 * sin(5 * M_PI / 32.0))};
         g_256apsk[4] = (FComplex){(r1 * cos(15 * M_PI / 32.0)), (r1 * sin(15 * M_PI / 32.0))};
         g_256apsk[5] = (FComplex){(r1 * cos(13 * M_PI / 32.0)), (r1 * sin(13 * M_PI / 32.0))};
         g_256apsk[6] = (FComplex){(r1 * cos(9 * M_PI / 32.0)), (r1 * sin(9 * M_PI / 32.0))};
         g_256apsk[7] = (FComplex){(r1 * cos(11 * M_PI / 32.0)), (r1 * sin(11 * M_PI / 32.0))};
         g_256apsk[8] = (FComplex){(r1 * cos(31 * M_PI / 32.0)), (r1 * sin(31 * M_PI / 32.0))};
         g_256apsk[9] = (FComplex){(r1 * cos(29 * M_PI / 32.0)), (r1 * sin(29 * M_PI / 32.0))};
         g_256apsk[10] = (FComplex){(r1 * cos(25 * M_PI / 32.0)), (r1 * sin(25 * M_PI / 32.0))};
         g_256apsk[11] = (FComplex){(r1 * cos(27 * M_PI / 32.0)), (r1 * sin(27 * M_PI / 32.0))};
         g_256apsk[12] = (FComplex){(r1 * cos(17 * M_PI / 32.0)), (r1 * sin(17 * M_PI / 32.0))};
         g_256apsk[13] = (FComplex){(r1 * cos(19 * M_PI / 32.0)), (r1 * sin(19 * M_PI / 32.0))};
         g_256apsk[14] = (FComplex){(r1 * cos(23 * M_PI / 32.0)), (r1 * sin(23 * M_PI / 32.0))};
         g_256apsk[15] = (FComplex){(r1 * cos(21 * M_PI / 32.0)), (r1 * sin(21 * M_PI / 32.0))};
         g_256apsk[16] = (FComplex){(r1 * cos(-1 * M_PI / 32.0)), (r1 * sin(-1 * M_PI / 32.0))};
         g_256apsk[17] = (FComplex){(r1 * cos(-3 * M_PI / 32.0)), (r1 * sin(-3 * M_PI / 32.0))};
         g_256apsk[18] = (FComplex){(r1 * cos(-7 * M_PI / 32.0)), (r1 * sin(-7 * M_PI / 32.0))};
         g_256apsk[19] = (FComplex){(r1 * cos(-5 * M_PI / 32.0)), (r1 * sin(-5 * M_PI / 32.0))};
         g_256apsk[20] = (FComplex){(r1 * cos(-15 * M_PI / 32.0)), (r1 * sin(-15 * M_PI / 32.0))};
         g_256apsk[21] = (FComplex){(r1 * cos(-13 * M_PI / 32.0)), (r1 * sin(-13 * M_PI / 32.0))};
         g_256apsk[22] = (FComplex){(r1 * cos(-9 * M_PI / 32.0)), (r1 * sin(-9 * M_PI / 32.0))};
         g_256apsk[23] = (FComplex){(r1 * cos(-11 * M_PI / 32.0)), (r1 * sin(-11 * M_PI / 32.0))};
         g_256apsk[24] = (FComplex){(r1 * cos(33 * M_PI / 32.0)), (r1 * sin(33 * M_PI / 32.0))};
         g_256apsk[25] = (FComplex){(r1 * cos(35 * M_PI / 32.0)), (r1 * sin(35 * M_PI / 32.0))};
         g_256apsk[26] = (FComplex){(r1 * cos(39 * M_PI / 32.0)), (r1 * sin(39 * M_PI / 32.0))};
         g_256apsk[27] = (FComplex){(r1 * cos(37 * M_PI / 32.0)), (r1 * sin(37 * M_PI / 32.0))};
         g_256apsk[28] = (FComplex){(r1 * cos(47 * M_PI / 32.0)), (r1 * sin(47 * M_PI / 32.0))};
         g_256apsk[29] = (FComplex){(r1 * cos(45 * M_PI / 32.0)), (r1 * sin(45 * M_PI / 32.0))};
         g_256apsk[30] = (FComplex){(r1 * cos(41 * M_PI / 32.0)), (r1 * sin(41 * M_PI / 32.0))};
         g_256apsk[31] = (FComplex){(r1 * cos(43 * M_PI / 32.0)), (r1 * sin(43 * M_PI / 32.0))};
         g_256apsk[32] = (FComplex){(r2 * cos(M_PI / 32.0)), (r2 * sin(M_PI / 32.0))};
         g_256apsk[33] = (FComplex){(r2 * cos(3 * M_PI / 32.0)), (r2 * sin(3 * M_PI / 32.0))};
         g_256apsk[34] = (FComplex){(r2 * cos(7 * M_PI / 32.0)), (r2 * sin(7 * M_PI / 32.0))};
         g_256apsk[35] = (FComplex){(r2 * cos(5 * M_PI / 32.0)), (r2 * sin(5 * M_PI / 32.0))};
         g_256apsk[36] = (FComplex){(r2 * cos(15 * M_PI / 32.0)), (r2 * sin(15 * M_PI / 32.0))};
         g_256apsk[37] = (FComplex){(r2 * cos(13 * M_PI / 32.0)), (r2 * sin(13 * M_PI / 32.0))};
         g_256apsk[38] = (FComplex){(r2 * cos(9 * M_PI / 32.0)), (r2 * sin(9 * M_PI / 32.0))};
         g_256apsk[39] = (FComplex){(r2 * cos(11 * M_PI / 32.0)), (r2 * sin(11 * M_PI / 32.0))};
         g_256apsk[40] = (FComplex){(r2 * cos(31 * M_PI / 32.0)), (r2 * sin(31 * M_PI / 32.0))};
         g_256apsk[41] = (FComplex){(r2 * cos(29 * M_PI / 32.0)), (r2 * sin(29 * M_PI / 32.0))};
         g_256apsk[42] = (FComplex){(r2 * cos(25 * M_PI / 32.0)), (r2 * sin(25 * M_PI / 32.0))};
         g_256apsk[43] = (FComplex){(r2 * cos(27 * M_PI / 32.0)), (r2 * sin(27 * M_PI / 32.0))};
         g_256apsk[44] = (FComplex){(r2 * cos(17 * M_PI / 32.0)), (r2 * sin(17 * M_PI / 32.0))};
         g_256apsk[45] = (FComplex){(r2 * cos(19 * M_PI / 32.0)), (r2 * sin(19 * M_PI / 32.0))};
         g_256apsk[46] = (FComplex){(r2 * cos(23 * M_PI / 32.0)), (r2 * sin(23 * M_PI / 32.0))};
         g_256apsk[47] = (FComplex){(r2 * cos(21 * M_PI / 32.0)), (r2 * sin(21 * M_PI / 32.0))};
         g_256apsk[48] = (FComplex){(r2 * cos(-1 * M_PI / 32.0)), (r2 * sin(-1 * M_PI / 32.0))};
         g_256apsk[49] = (FComplex){(r2 * cos(-3 * M_PI / 32.0)), (r2 * sin(-3 * M_PI / 32.0))};
         g_256apsk[50] = (FComplex){(r2 * cos(-7 * M_PI / 32.0)), (r2 * sin(-7 * M_PI / 32.0))};
         g_256apsk[51] = (FComplex){(r2 * cos(-5 * M_PI / 32.0)), (r2 * sin(-5 * M_PI / 32.0))};
         g_256apsk[52] = (FComplex){(r2 * cos(-15 * M_PI / 32.0)), (r2 * sin(-15 * M_PI / 32.0))};
         g_256apsk[53] = (FComplex){(r2 * cos(-13 * M_PI / 32.0)), (r2 * sin(-13 * M_PI / 32.0))};
         g_256apsk[54] = (FComplex){(r2 * cos(-9 * M_PI / 32.0)), (r2 * sin(-9 * M_PI / 32.0))};
         g_256apsk[55] = (FComplex){(r2 * cos(-11 * M_PI / 32.0)), (r2 * sin(-11 * M_PI / 32.0))};
         g_256apsk[56] = (FComplex){(r2 * cos(33 * M_PI / 32.0)), (r2 * sin(33 * M_PI / 32.0))};
         g_256apsk[57] = (FComplex){(r2 * cos(35 * M_PI / 32.0)), (r2 * sin(35 * M_PI / 32.0))};
         g_256apsk[58] = (FComplex){(r2 * cos(39 * M_PI / 32.0)), (r2 * sin(39 * M_PI / 32.0))};
         g_256apsk[59] = (FComplex){(r2 * cos(37 * M_PI / 32.0)), (r2 * sin(37 * M_PI / 32.0))};
         g_256apsk[60] = (FComplex){(r2 * cos(47 * M_PI / 32.0)), (r2 * sin(47 * M_PI / 32.0))};
         g_256apsk[61] = (FComplex){(r2 * cos(45 * M_PI / 32.0)), (r2 * sin(45 * M_PI / 32.0))};
         g_256apsk[62] = (FComplex){(r2 * cos(41 * M_PI / 32.0)), (r2 * sin(41 * M_PI / 32.0))};
         g_256apsk[63] = (FComplex){(r2 * cos(43 * M_PI / 32.0)), (r2 * sin(43 * M_PI / 32.0))};
         g_256apsk[64] = (FComplex){(r4 * cos(M_PI / 32.0)), (r4 * sin(M_PI / 32.0))};
         g_256apsk[65] = (FComplex){(r4 * cos(3 * M_PI / 32.0)), (r4 * sin(3 * M_PI / 32.0))};
         g_256apsk[66] = (FComplex){(r4 * cos(7 * M_PI / 32.0)), (r4 * sin(7 * M_PI / 32.0))};
         g_256apsk[67] = (FComplex){(r4 * cos(5 * M_PI / 32.0)), (r4 * sin(5 * M_PI / 32.0))};
         g_256apsk[68] = (FComplex){(r4 * cos(15 * M_PI / 32.0)), (r4 * sin(15 * M_PI / 32.0))};
         g_256apsk[69] = (FComplex){(r4 * cos(13 * M_PI / 32.0)), (r4 * sin(13 * M_PI / 32.0))};
         g_256apsk[70] = (FComplex){(r4 * cos(9 * M_PI / 32.0)), (r4 * sin(9 * M_PI / 32.0))};
         g_256apsk[71] = (FComplex){(r4 * cos(11 * M_PI / 32.0)), (r4 * sin(11 * M_PI / 32.0))};
         g_256apsk[72] = (FComplex){(r4 * cos(31 * M_PI / 32.0)), (r4 * sin(31 * M_PI / 32.0))};
         g_256apsk[73] = (FComplex){(r4 * cos(29 * M_PI / 32.0)), (r4 * sin(29 * M_PI / 32.0))};
         g_256apsk[74] = (FComplex){(r4 * cos(25 * M_PI / 32.0)), (r4 * sin(25 * M_PI / 32.0))};
         g_256apsk[75] = (FComplex){(r4 * cos(27 * M_PI / 32.0)), (r4 * sin(27 * M_PI / 32.0))};
         g_256apsk[76] = (FComplex){(r4 * cos(17 * M_PI / 32.0)), (r4 * sin(17 * M_PI / 32.0))};
         g_256apsk[77] = (FComplex){(r4 * cos(19 * M_PI / 32.0)), (r4 * sin(19 * M_PI / 32.0))};
         g_256apsk[78] = (FComplex){(r4 * cos(23 * M_PI / 32.0)), (r4 * sin(23 * M_PI / 32.0))};
         g_256apsk[79] = (FComplex){(r4 * cos(21 * M_PI / 32.0)), (r4 * sin(21 * M_PI / 32.0))};
         g_256apsk[80] = (FComplex){(r4 * cos(-1 * M_PI / 32.0)), (r4 * sin(-1 * M_PI / 32.0))};
         g_256apsk[81] = (FComplex){(r4 * cos(-3 * M_PI / 32.0)), (r4 * sin(-3 * M_PI / 32.0))};
         g_256apsk[82] = (FComplex){(r4 * cos(-7 * M_PI / 32.0)), (r4 * sin(-7 * M_PI / 32.0))};
         g_256apsk[83] = (FComplex){(r4 * cos(-5 * M_PI / 32.0)), (r4 * sin(-5 * M_PI / 32.0))};
         g_256apsk[84] = (FComplex){(r4 * cos(-15 * M_PI / 32.0)), (r4 * sin(-15 * M_PI / 32.0))};
         g_256apsk[85] = (FComplex){(r4 * cos(-13 * M_PI / 32.0)), (r4 * sin(-13 * M_PI / 32.0))};
         g_256apsk[86] = (FComplex){(r4 * cos(-9 * M_PI / 32.0)), (r4 * sin(-9 * M_PI / 32.0))};
         g_256apsk[87] = (FComplex){(r4 * cos(-11 * M_PI / 32.0)), (r4 * sin(-11 * M_PI / 32.0))};
         g_256apsk[88] = (FComplex){(r4 * cos(33 * M_PI / 32.0)), (r4 * sin(33 * M_PI / 32.0))};
         g_256apsk[89] = (FComplex){(r4 * cos(35 * M_PI / 32.0)), (r4 * sin(35 * M_PI / 32.0))};
         g_256apsk[90] = (FComplex){(r4 * cos(39 * M_PI / 32.0)), (r4 * sin(39 * M_PI / 32.0))};
         g_256apsk[91] = (FComplex){(r4 * cos(37 * M_PI / 32.0)), (r4 * sin(37 * M_PI / 32.0))};
         g_256apsk[92] = (FComplex){(r4 * cos(47 * M_PI / 32.0)), (r4 * sin(47 * M_PI / 32.0))};
         g_256apsk[93] = (FComplex){(r4 * cos(45 * M_PI / 32.0)), (r4 * sin(45 * M_PI / 32.0))};
         g_256apsk[94] = (FComplex){(r4 * cos(41 * M_PI / 32.0)), (r4 * sin(41 * M_PI / 32.0))};
         g_256apsk[95] = (FComplex){(r4 * cos(43 * M_PI / 32.0)), (r4 * sin(43 * M_PI / 32.0))};
         g_256apsk[96] = (FComplex){(r3 * cos(M_PI / 32.0)), (r3 * sin(M_PI / 32.0))};
         g_256apsk[97] = (FComplex){(r3 * cos(3 * M_PI / 32.0)), (r3 * sin(3 * M_PI / 32.0))};
         g_256apsk[98] = (FComplex){(r3 * cos(7 * M_PI / 32.0)), (r3 * sin(7 * M_PI / 32.0))};
         g_256apsk[99] = (FComplex){(r3 * cos(5 * M_PI / 32.0)), (r3 * sin(5 * M_PI / 32.0))};
         g_256apsk[100] = (FComplex){(r3 * cos(15 * M_PI / 32.0)), (r3 * sin(15 * M_PI / 32.0))};
         g_256apsk[101] = (FComplex){(r3 * cos(13 * M_PI / 32.0)), (r3 * sin(13 * M_PI / 32.0))};
         g_256apsk[102] = (FComplex){(r3 * cos(9 * M_PI / 32.0)), (r3 * sin(9 * M_PI / 32.0))};
         g_256apsk[103] = (FComplex){(r3 * cos(11 * M_PI / 32.0)), (r3 * sin(11 * M_PI / 32.0))};
         g_256apsk[104] = (FComplex){(r3 * cos(31 * M_PI / 32.0)), (r3 * sin(31 * M_PI / 32.0))};
         g_256apsk[105] = (FComplex){(r3 * cos(29 * M_PI / 32.0)), (r3 * sin(29 * M_PI / 32.0))};
         g_256apsk[106] = (FComplex){(r3 * cos(25 * M_PI / 32.0)), (r3 * sin(25 * M_PI / 32.0))};
         g_256apsk[107] = (FComplex){(r3 * cos(27 * M_PI / 32.0)), (r3 * sin(27 * M_PI / 32.0))};
         g_256apsk[108] = (FComplex){(r3 * cos(17 * M_PI / 32.0)), (r3 * sin(17 * M_PI / 32.0))};
         g_256apsk[109] = (FComplex){(r3 * cos(19 * M_PI / 32.0)), (r3 * sin(19 * M_PI / 32.0))};
         g_256apsk[110] = (FComplex){(r3 * cos(23 * M_PI / 32.0)), (r3 * sin(23 * M_PI / 32.0))};
         g_256apsk[111] = (FComplex){(r3 * cos(21 * M_PI / 32.0)), (r3 * sin(21 * M_PI / 32.0))};
         g_256apsk[112] = (FComplex){(r3 * cos(-1 * M_PI / 32.0)), (r3 * sin(-1 * M_PI / 32.0))};
         g_256apsk[113] = (FComplex){(r3 * cos(-3 * M_PI / 32.0)), (r3 * sin(-3 * M_PI / 32.0))};
         g_256apsk[114] = (FComplex){(r3 * cos(-7 * M_PI / 32.0)), (r3 * sin(-7 * M_PI / 32.0))};
         g_256apsk[115] = (FComplex){(r3 * cos(-5 * M_PI / 32.0)), (r3 * sin(-5 * M_PI / 32.0))};
         g_256apsk[116] = (FComplex){(r3 * cos(-15 * M_PI / 32.0)), (r3 * sin(-15 * M_PI / 32.0))};
         g_256apsk[117] = (FComplex){(r3 * cos(-13 * M_PI / 32.0)), (r3 * sin(-13 * M_PI / 32.0))};
         g_256apsk[118] = (FComplex){(r3 * cos(-9 * M_PI / 32.0)), (r3 * sin(-9 * M_PI / 32.0))};
         g_256apsk[119] = (FComplex){(r3 * cos(-11 * M_PI / 32.0)), (r3 * sin(-11 * M_PI / 32.0))};
         g_256apsk[120] = (FComplex){(r3 * cos(33 * M_PI / 32.0)), (r3 * sin(33 * M_PI / 32.0))};
         g_256apsk[121] = (FComplex){(r3 * cos(35 * M_PI / 32.0)), (r3 * sin(35 * M_PI / 32.0))};
         g_256apsk[122] = (FComplex){(r3 * cos(39 * M_PI / 32.0)), (r3 * sin(39 * M_PI / 32.0))};
         g_256apsk[123] = (FComplex){(r3 * cos(37 * M_PI / 32.0)), (r3 * sin(37 * M_PI / 32.0))};
         g_256apsk[124] = (FComplex){(r3 * cos(47 * M_PI / 32.0)), (r3 * sin(47 * M_PI / 32.0))};
         g_256apsk[125] = (FComplex){(r3 * cos(45 * M_PI / 32.0)), (r3 * sin(45 * M_PI / 32.0))};
         g_256apsk[126] = (FComplex){(r3 * cos(41 * M_PI / 32.0)), (r3 * sin(41 * M_PI / 32.0))};
         g_256apsk[127] = (FComplex){(r3 * cos(43 * M_PI / 32.0)), (r3 * sin(43 * M_PI / 32.0))};
         g_256apsk[128] = (FComplex){(r8 * cos(M_PI / 32.0)), (r8 * sin(M_PI / 32.0))};
         g_256apsk[129] = (FComplex){(r8 * cos(3 * M_PI / 32.0)), (r8 * sin(3 * M_PI / 32.0))};
         g_256apsk[130] = (FComplex){(r8 * cos(7 * M_PI / 32.0)), (r8 * sin(7 * M_PI / 32.0))};
         g_256apsk[131] = (FComplex){(r8 * cos(5 * M_PI / 32.0)), (r8 * sin(5 * M_PI / 32.0))};
         g_256apsk[132] = (FComplex){(r8 * cos(15 * M_PI / 32.0)), (r8 * sin(15 * M_PI / 32.0))};
         g_256apsk[133] = (FComplex){(r8 * cos(13 * M_PI / 32.0)), (r8 * sin(13 * M_PI / 32.0))};
         g_256apsk[134] = (FComplex){(r8 * cos(9 * M_PI / 32.0)), (r8 * sin(9 * M_PI / 32.0))};
         g_256apsk[135] = (FComplex){(r8 * cos(11 * M_PI / 32.0)), (r8 * sin(11 * M_PI / 32.0))};
         g_256apsk[136] = (FComplex){(r8 * cos(31 * M_PI / 32.0)), (r8 * sin(31 * M_PI / 32.0))};
         g_256apsk[137] = (FComplex){(r8 * cos(29 * M_PI / 32.0)), (r8 * sin(29 * M_PI / 32.0))};
         g_256apsk[138] = (FComplex){(r8 * cos(25 * M_PI / 32.0)), (r8 * sin(25 * M_PI / 32.0))};
         g_256apsk[139] = (FComplex){(r8 * cos(27 * M_PI / 32.0)), (r8 * sin(27 * M_PI / 32.0))};
         g_256apsk[140] = (FComplex){(r8 * cos(17 * M_PI / 32.0)), (r8 * sin(17 * M_PI / 32.0))};
         g_256apsk[141] = (FComplex){(r8 * cos(19 * M_PI / 32.0)), (r8 * sin(19 * M_PI / 32.0))};
         g_256apsk[142] = (FComplex){(r8 * cos(23 * M_PI / 32.0)), (r8 * sin(23 * M_PI / 32.0))};
         g_256apsk[143] = (FComplex){(r8 * cos(21 * M_PI / 32.0)), (r8 * sin(21 * M_PI / 32.0))};
         g_256apsk[144] = (FComplex){(r8 * cos(-1 * M_PI / 32.0)), (r8 * sin(-1 * M_PI / 32.0))};
         g_256apsk[145] = (FComplex){(r8 * cos(-3 * M_PI / 32.0)), (r8 * sin(-3 * M_PI / 32.0))};
         g_256apsk[146] = (FComplex){(r8 * cos(-7 * M_PI / 32.0)), (r8 * sin(-7 * M_PI / 32.0))};
         g_256apsk[147] = (FComplex){(r8 * cos(-5 * M_PI / 32.0)), (r8 * sin(-5 * M_PI / 32.0))};
         g_256apsk[148] = (FComplex){(r8 * cos(-15 * M_PI / 32.0)), (r8 * sin(-15 * M_PI / 32.0))};
         g_256apsk[149] = (FComplex){(r8 * cos(-13 * M_PI / 32.0)), (r8 * sin(-13 * M_PI / 32.0))};
         g_256apsk[150] = (FComplex){(r8 * cos(-9 * M_PI / 32.0)), (r8 * sin(-9 * M_PI / 32.0))};
         g_256apsk[151] = (FComplex){(r8 * cos(-11 * M_PI / 32.0)), (r8 * sin(-11 * M_PI / 32.0))};
         g_256apsk[152] = (FComplex){(r8 * cos(33 * M_PI / 32.0)), (r8 * sin(33 * M_PI / 32.0))};
         g_256apsk[153] = (FComplex){(r8 * cos(35 * M_PI / 32.0)), (r8 * sin(35 * M_PI / 32.0))};
         g_256apsk[154] = (FComplex){(r8 * cos(39 * M_PI / 32.0)), (r8 * sin(39 * M_PI / 32.0))};
         g_256apsk[155] = (FComplex){(r8 * cos(37 * M_PI / 32.0)), (r8 * sin(37 * M_PI / 32.0))};
         g_256apsk[156] = (FComplex){(r8 * cos(47 * M_PI / 32.0)), (r8 * sin(47 * M_PI / 32.0))};
         g_256apsk[157] = (FComplex){(r8 * cos(45 * M_PI / 32.0)), (r8 * sin(45 * M_PI / 32.0))};
         g_256apsk[158] = (FComplex){(r8 * cos(41 * M_PI / 32.0)), (r8 * sin(41 * M_PI / 32.0))};
         g_256apsk[159] = (FComplex){(r8 * cos(43 * M_PI / 32.0)), (r8 * sin(43 * M_PI / 32.0))};
         g_256apsk[160] = (FComplex){(r7 * cos(M_PI / 32.0)), (r7 * sin(M_PI / 32.0))};
         g_256apsk[161] = (FComplex){(r7 * cos(3 * M_PI / 32.0)), (r7 * sin(3 * M_PI / 32.0))};
         g_256apsk[162] = (FComplex){(r7 * cos(7 * M_PI / 32.0)), (r7 * sin(7 * M_PI / 32.0))};
         g_256apsk[163] = (FComplex){(r7 * cos(5 * M_PI / 32.0)), (r7 * sin(5 * M_PI / 32.0))};
         g_256apsk[164] = (FComplex){(r7 * cos(15 * M_PI / 32.0)), (r7 * sin(15 * M_PI / 32.0))};
         g_256apsk[165] = (FComplex){(r7 * cos(13 * M_PI / 32.0)), (r7 * sin(13 * M_PI / 32.0))};
         g_256apsk[166] = (FComplex){(r7 * cos(9 * M_PI / 32.0)), (r7 * sin(9 * M_PI / 32.0))};
         g_256apsk[167] = (FComplex){(r7 * cos(11 * M_PI / 32.0)), (r7 * sin(11 * M_PI / 32.0))};
         g_256apsk[168] = (FComplex){(r7 * cos(31 * M_PI / 32.0)), (r7 * sin(31 * M_PI / 32.0))};
         g_256apsk[169] = (FComplex){(r7 * cos(29 * M_PI / 32.0)), (r7 * sin(29 * M_PI / 32.0))};
         g_256apsk[170] = (FComplex){(r7 * cos(25 * M_PI / 32.0)), (r7 * sin(25 * M_PI / 32.0))};
         g_256apsk[171] = (FComplex){(r7 * cos(27 * M_PI / 32.0)), (r7 * sin(27 * M_PI / 32.0))};
         g_256apsk[172] = (FComplex){(r7 * cos(17 * M_PI / 32.0)), (r7 * sin(17 * M_PI / 32.0))};
         g_256apsk[173] = (FComplex){(r7 * cos(19 * M_PI / 32.0)), (r7 * sin(19 * M_PI / 32.0))};
         g_256apsk[174] = (FComplex){(r7 * cos(23 * M_PI / 32.0)), (r7 * sin(23 * M_PI / 32.0))};
         g_256apsk[175] = (FComplex){(r7 * cos(21 * M_PI / 32.0)), (r7 * sin(21 * M_PI / 32.0))};
         g_256apsk[176] = (FComplex){(r7 * cos(-1 * M_PI / 32.0)), (r7 * sin(-1 * M_PI / 32.0))};
         g_256apsk[177] = (FComplex){(r7 * cos(-3 * M_PI / 32.0)), (r7 * sin(-3 * M_PI / 32.0))};
         g_256apsk[178] = (FComplex){(r7 * cos(-7 * M_PI / 32.0)), (r7 * sin(-7 * M_PI / 32.0))};
         g_256apsk[179] = (FComplex){(r7 * cos(-5 * M_PI / 32.0)), (r7 * sin(-5 * M_PI / 32.0))};
         g_256apsk[180] = (FComplex){(r7 * cos(-15 * M_PI / 32.0)), (r7 * sin(-15 * M_PI / 32.0))};
         g_256apsk[181] = (FComplex){(r7 * cos(-13 * M_PI / 32.0)), (r7 * sin(-13 * M_PI / 32.0))};
         g_256apsk[182] = (FComplex){(r7 * cos(-9 * M_PI / 32.0)), (r7 * sin(-9 * M_PI / 32.0))};
         g_256apsk[183] = (FComplex){(r7 * cos(-11 * M_PI / 32.0)), (r7 * sin(-11 * M_PI / 32.0))};
         g_256apsk[184] = (FComplex){(r7 * cos(33 * M_PI / 32.0)), (r7 * sin(33 * M_PI / 32.0))};
         g_256apsk[185] = (FComplex){(r7 * cos(35 * M_PI / 32.0)), (r7 * sin(35 * M_PI / 32.0))};
         g_256apsk[186] = (FComplex){(r7 * cos(39 * M_PI / 32.0)), (r7 * sin(39 * M_PI / 32.0))};
         g_256apsk[187] = (FComplex){(r7 * cos(37 * M_PI / 32.0)), (r7 * sin(37 * M_PI / 32.0))};
         g_256apsk[188] = (FComplex){(r7 * cos(47 * M_PI / 32.0)), (r7 * sin(47 * M_PI / 32.0))};
         g_256apsk[189] = (FComplex){(r7 * cos(45 * M_PI / 32.0)), (r7 * sin(45 * M_PI / 32.0))};
         g_256apsk[190] = (FComplex){(r7 * cos(41 * M_PI / 32.0)), (r7 * sin(41 * M_PI / 32.0))};
         g_256apsk[191] = (FComplex){(r7 * cos(43 * M_PI / 32.0)), (r7 * sin(43 * M_PI / 32.0))};
         g_256apsk[192] = (FComplex){(r5 * cos(M_PI / 32.0)), (r5 * sin(M_PI / 32.0))};
         g_256apsk[193] = (FComplex){(r5 * cos(3 * M_PI / 32.0)), (r5 * sin(3 * M_PI / 32.0))};
         g_256apsk[194] = (FComplex){(r5 * cos(7 * M_PI / 32.0)), (r5 * sin(7 * M_PI / 32.0))};
         g_256apsk[195] = (FComplex){(r5 * cos(5 * M_PI / 32.0)), (r5 * sin(5 * M_PI / 32.0))};
         g_256apsk[196] = (FComplex){(r5 * cos(15 * M_PI / 32.0)), (r5 * sin(15 * M_PI / 32.0))};
         g_256apsk[197] = (FComplex){(r5 * cos(13 * M_PI / 32.0)), (r5 * sin(13 * M_PI / 32.0))};
         g_256apsk[198] = (FComplex){(r5 * cos(9 * M_PI / 32.0)), (r5 * sin(9 * M_PI / 32.0))};
         g_256apsk[199] = (FComplex){(r5 * cos(11 * M_PI / 32.0)), (r5 * sin(11 * M_PI / 32.0))};
         g_256apsk[200] = (FComplex){(r5 * cos(31 * M_PI / 32.0)), (r5 * sin(31 * M_PI / 32.0))};
         g_256apsk[201] = (FComplex){(r5 * cos(29 * M_PI / 32.0)), (r5 * sin(29 * M_PI / 32.0))};
         g_256apsk[202] = (FComplex){(r5 * cos(25 * M_PI / 32.0)), (r5 * sin(25 * M_PI / 32.0))};
         g_256apsk[203] = (FComplex){(r5 * cos(27 * M_PI / 32.0)), (r5 * sin(27 * M_PI / 32.0))};
         g_256apsk[204] = (FComplex){(r5 * cos(17 * M_PI / 32.0)), (r5 * sin(17 * M_PI / 32.0))};
         g_256apsk[205] = (FComplex){(r5 * cos(19 * M_PI / 32.0)), (r5 * sin(19 * M_PI / 32.0))};
         g_256apsk[206] = (FComplex){(r5 * cos(23 * M_PI / 32.0)), (r5 * sin(23 * M_PI / 32.0))};
         g_256apsk[207] = (FComplex){(r5 * cos(21 * M_PI / 32.0)), (r5 * sin(21 * M_PI / 32.0))};
         g_256apsk[208] = (FComplex){(r5 * cos(-1 * M_PI / 32.0)), (r5 * sin(-1 * M_PI / 32.0))};
         g_256apsk[209] = (FComplex){(r5 * cos(-3 * M_PI / 32.0)), (r5 * sin(-3 * M_PI / 32.0))};
         g_256apsk[210] = (FComplex){(r5 * cos(-7 * M_PI / 32.0)), (r5 * sin(-7 * M_PI / 32.0))};
         g_256apsk[211] = (FComplex){(r5 * cos(-5 * M_PI / 32.0)), (r5 * sin(-5 * M_PI / 32.0))};
         g_256apsk[212] = (FComplex){(r5 * cos(-15 * M_PI / 32.0)), (r5 * sin(-15 * M_PI / 32.0))};
         g_256apsk[213] = (FComplex){(r5 * cos(-13 * M_PI / 32.0)), (r5 * sin(-13 * M_PI / 32.0))};
         g_256apsk[214] = (FComplex){(r5 * cos(-9 * M_PI / 32.0)), (r5 * sin(-9 * M_PI / 32.0))};
         g_256apsk[215] = (FComplex){(r5 * cos(-11 * M_PI / 32.0)), (r5 * sin(-11 * M_PI / 32.0))};
         g_256apsk[216] = (FComplex){(r5 * cos(33 * M_PI / 32.0)), (r5 * sin(33 * M_PI / 32.0))};
         g_256apsk[217] = (FComplex){(r5 * cos(35 * M_PI / 32.0)), (r5 * sin(35 * M_PI / 32.0))};
         g_256apsk[218] = (FComplex){(r5 * cos(39 * M_PI / 32.0)), (r5 * sin(39 * M_PI / 32.0))};
         g_256apsk[219] = (FComplex){(r5 * cos(37 * M_PI / 32.0)), (r5 * sin(37 * M_PI / 32.0))};
         g_256apsk[220] = (FComplex){(r5 * cos(47 * M_PI / 32.0)), (r5 * sin(47 * M_PI / 32.0))};
         g_256apsk[221] = (FComplex){(r5 * cos(45 * M_PI / 32.0)), (r5 * sin(45 * M_PI / 32.0))};
         g_256apsk[222] = (FComplex){(r5 * cos(41 * M_PI / 32.0)), (r5 * sin(41 * M_PI / 32.0))};
         g_256apsk[223] = (FComplex){(r5 * cos(43 * M_PI / 32.0)), (r5 * sin(43 * M_PI / 32.0))};
         g_256apsk[224] = (FComplex){(r6 * cos(M_PI / 32.0)), (r6 * sin(M_PI / 32.0))};
         g_256apsk[225] = (FComplex){(r6 * cos(3 * M_PI / 32.0)), (r6 * sin(3 * M_PI / 32.0))};
         g_256apsk[226] = (FComplex){(r6 * cos(7 * M_PI / 32.0)), (r6 * sin(7 * M_PI / 32.0))};
         g_256apsk[227] = (FComplex){(r6 * cos(5 * M_PI / 32.0)), (r6 * sin(5 * M_PI / 32.0))};
         g_256apsk[228] = (FComplex){(r6 * cos(15 * M_PI / 32.0)), (r6 * sin(15 * M_PI / 32.0))};
         g_256apsk[229] = (FComplex){(r6 * cos(13 * M_PI / 32.0)), (r6 * sin(13 * M_PI / 32.0))};
         g_256apsk[230] = (FComplex){(r6 * cos(9 * M_PI / 32.0)), (r6 * sin(9 * M_PI / 32.0))};
         g_256apsk[231] = (FComplex){(r6 * cos(11 * M_PI / 32.0)), (r6 * sin(11 * M_PI / 32.0))};
         g_256apsk[232] = (FComplex){(r6 * cos(31 * M_PI / 32.0)), (r6 * sin(31 * M_PI / 32.0))};
         g_256apsk[233] = (FComplex){(r6 * cos(29 * M_PI / 32.0)), (r6 * sin(29 * M_PI / 32.0))};
         g_256apsk[234] = (FComplex){(r6 * cos(25 * M_PI / 32.0)), (r6 * sin(25 * M_PI / 32.0))};
         g_256apsk[235] = (FComplex){(r6 * cos(27 * M_PI / 32.0)), (r6 * sin(27 * M_PI / 32.0))};
         g_256apsk[236] = (FComplex){(r6 * cos(17 * M_PI / 32.0)), (r6 * sin(17 * M_PI / 32.0))};
         g_256apsk[237] = (FComplex){(r6 * cos(19 * M_PI / 32.0)), (r6 * sin(19 * M_PI / 32.0))};
         g_256apsk[238] = (FComplex){(r6 * cos(23 * M_PI / 32.0)), (r6 * sin(23 * M_PI / 32.0))};
         g_256apsk[239] = (FComplex){(r6 * cos(21 * M_PI / 32.0)), (r6 * sin(21 * M_PI / 32.0))};
         g_256apsk[240] = (FComplex){(r6 * cos(-1 * M_PI / 32.0)), (r6 * sin(-1 * M_PI / 32.0))};
         g_256apsk[241] = (FComplex){(r6 * cos(-3 * M_PI / 32.0)), (r6 * sin(-3 * M_PI / 32.0))};
         g_256apsk[242] = (FComplex){(r6 * cos(-7 * M_PI / 32.0)), (r6 * sin(-7 * M_PI / 32.0))};
         g_256apsk[243] = (FComplex){(r6 * cos(-5 * M_PI / 32.0)), (r6 * sin(-5 * M_PI / 32.0))};
         g_256apsk[244] = (FComplex){(r6 * cos(-15 * M_PI / 32.0)), (r6 * sin(-15 * M_PI / 32.0))};
         g_256apsk[245] = (FComplex){(r6 * cos(-13 * M_PI / 32.0)), (r6 * sin(-13 * M_PI / 32.0))};
         g_256apsk[246] = (FComplex){(r6 * cos(-9 * M_PI / 32.0)), (r6 * sin(-9 * M_PI / 32.0))};
         g_256apsk[247] = (FComplex){(r6 * cos(-11 * M_PI / 32.0)), (r6 * sin(-11 * M_PI / 32.0))};
         g_256apsk[248] = (FComplex){(r6 * cos(33 * M_PI / 32.0)), (r6 * sin(33 * M_PI / 32.0))};
         g_256apsk[249] = (FComplex){(r6 * cos(35 * M_PI / 32.0)), (r6 * sin(35 * M_PI / 32.0))};
         g_256apsk[250] = (FComplex){(r6 * cos(39 * M_PI / 32.0)), (r6 * sin(39 * M_PI / 32.0))};
         g_256apsk[251] = (FComplex){(r6 * cos(37 * M_PI / 32.0)), (r6 * sin(37 * M_PI / 32.0))};
         g_256apsk[252] = (FComplex){(r6 * cos(47 * M_PI / 32.0)), (r6 * sin(47 * M_PI / 32.0))};
         g_256apsk[253] = (FComplex){(r6 * cos(45 * M_PI / 32.0)), (r6 * sin(45 * M_PI / 32.0))};
         g_256apsk[254] = (FComplex){(r6 * cos(41 * M_PI / 32.0)), (r6 * sin(41 * M_PI / 32.0))};
         g_256apsk[255] = (FComplex){(r6 * cos(43 * M_PI / 32.0)), (r6 * sin(43 * M_PI / 32.0))};
         demap_update_constellation(g_256apsk, 256);
       }
       break;
     default:
       g_qpsk[0] = (FComplex){(r1 * cos(M_PI / 4.0)), (r1 * sin(M_PI / 4.0))};
       g_qpsk[1] = (FComplex){(r1 * cos(7 * M_PI / 4.0)), (r1 * sin(7 * M_PI / 4.0))};
       g_qpsk[2] = (FComplex){(r1 * cos(3 * M_PI / 4.0)), (r1 * sin(3 * M_PI / 4.0))};
       g_qpsk[3] = (FComplex){(r1 * cos(5 * M_PI / 4.0)), (r1 * sin(5 * M_PI / 4.0))};
       demap_update_constellation(g_qpsk, 4);
       break;
   }
 }
